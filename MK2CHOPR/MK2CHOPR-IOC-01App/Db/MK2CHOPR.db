#######################################################
#
# DB file for ISIS MK2 Chopper
#
#######################################################

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(bo, "$(P)DISABLE")
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "0")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(ai, "$(P)FREQ:SP")
{
    field(DESC, "Demanded frequency")
    field(DTYP, "stream")
	field(SCAN, "Passive")
    field(EGU, "Hz")
	field(PREC, "2")
    field(INP, "@mk2chopper.proto get_demanded_frequency $(PORT)")
}

#######################################################
# Frequencies
#######################################################

record(ai, "$(P)$(Q)FREQ")
{
    field(DESC, "Actual frequency")
    field(DTYP, "stream")
	field(INP, "@mk2chopper.proto getTrueFreq $(PORT)")
    field(SCAN, "1 second")
	field(EGU, "Hz")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:FREQ")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ao, "$(P)$(Q)FREQ:SP")
{
    field(DESC, "Set the demanded frequency")
    field(DTYP, "stream")
    field(OUT,  "@mk2chopper.proto setDemFreq $(PORT)")
	field(EGU, "Hz")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:FREQ:SP")
    field(SDIS, "$(P)DISABLE")
}

record(ai, "$(P)$(Q)FREQ:SP:RBV")
{
    field(DESC, "Readback of demanded frequency")
    field(DTYP, "stream")
	field(INP, "@mk2chopper.proto getDemFreq $(PORT)")
    field(SCAN, "1 second")
	field(EGU, "Hz")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:FREQ")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ai, "$(P)$(Q)SIM:FREQ")
{
}

alias("$(P)$(Q)SIM:FREQ","$(P)$(Q)SIM:FREQ:SP")
alias("$(P)$(Q)SIM:FREQ","$(P)$(Q)SIM:FREQ:SP:RBV")


#######################################################
# Phase delays
#######################################################

record(ai, "$(P)$(Q)PHASE")
{
    field(DESC, "Actual phase delay")
    field(DTYP, "stream")
	field(INP, "@mk2chopper.proto getTruePhase $(PORT)")
    field(SCAN, "1 second")
	field(EGU, "us")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:PHASE")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ao, "$(P)$(Q)PHASE:SP")
{
    field(DESC, "Set the demanded phase delay")
    field(DTYP, "stream")
    field(OUT,  "@mk2chopper.proto setDemPhase $(PORT)")
	field(EGU, "us")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:PHASE:SP")
    field(SDIS, "$(P)DISABLE")
}

record(ai, "$(P)$(Q)PHASE:SP:RBV")
{
    field(DESC, "Readback of demanded phase delay")
    field(DTYP, "stream")
	field(INP, "@mk2chopper.proto getDemPhase $(PORT)")
    field(SCAN, "1 second")
	field(EGU, "us")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:PHASE")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ai, "$(P)$(Q)SIM:PHASE")
{
}

alias("$(P)$(Q)SIM:PHASE","$(P)$(Q)SIM:PHASE:SP")
alias("$(P)$(Q)SIM:PHASE","$(P)$(Q)SIM:PHASE:SP:RBV")


#######################################################
# Phase errors
#######################################################

record(ai, "$(P)$(Q)PHASE:ERR")
{
    field(DESC, "Actual phase delay error")
    field(DTYP, "stream")
	field(INP, "@mk2chopper.proto getTruePhaseErr $(PORT)")
    field(SCAN, "1 second")
	field(EGU, "us")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:PHASE:ERR")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ao, "$(P)$(Q)PHASE:ERR:SP")
{
    field(DESC, "Set the demanded phase delay error window")
    field(DTYP, "stream")
    field(OUT,  "@mk2chopper.proto setDemPhaseErr $(PORT)")
	field(EGU, "us")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:PHASE:ERR:SP")
    field(SDIS, "$(P)DISABLE")
}

record(ai, "$(P)$(Q)PHASE:SP:RBV")
{
    field(DESC, "Readback of demanded phase delay error window")
    field(DTYP, "stream")
	field(INP, "@mk2chopper.proto getDemPhaseErr $(PORT)")
    field(SCAN, "1 second")
	field(EGU, "us")
    field(SIML, "$(P)SIM")
	field(SIOL, "$(P)$(Q)SIM:PHASE:ERR")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ai, "$(P)$(Q)SIM:PHASE:ERR")
{
}

alias("$(P)$(Q)SIM:PHASE:ERR","$(P)$(Q)SIM:PHASE:ERR:SP")
alias("$(P)$(Q)SIM:PHASE:ERR","$(P)$(Q)SIM:PHASE:ERR:SP:RBV")
