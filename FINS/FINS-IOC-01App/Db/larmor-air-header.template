#
# Read addresses
# 
# DM0001               Flow1                    0-6000 = 0-25L/min
# DM0002               Flow2                    0-6000 = 0-25L/min
# DM0003               Flow3                    0-6000 = 0-25L/min
# DM0004               Flow4                    0-6000 = 0-25L/min
# 
# DM0005               Valve1 Position                 0-6000 = 0-100% open
# DM0006               Valve2 Position                 0-6000 = 0-100% open
# DM0007               Valve3 Position                 0-6000 = 0-100% open
# DM0008               Valve4 Position                 0-6000 = 0-100% open
# DM0099               PLC "Heart Beat" (1s pulse)     0 to 65535
# 
# CIO0100.06           ON = Table lifted (valve open & pressure OK)
# 
# Write address:
# 
# WR0000.02          ON = Request table to lift (reset to 0 to lower table)
# 

record(bi, "$(P)$(Q)STATUS")
{
    field(DESC, "Status")
	field(DTYP, "asynInt32")
    field(ZNAM, "LOWERED")
    field(ONAM, "RAISED")
	field(INP,  "@asyn(PLC, 100, 5.0) FINS_IO_READ_B6")
	field(SCAN, "1 second")
    field(SIML, "$(P)$(Q)SIM")
    field(SIOL, "$(P)$(Q)SIM:STATUS")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
	info(alarm, "Bench")
}

record(longin, "$(P)$(Q)HEARTBEAT")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn(PLC, 99, 5.0) FINS_DM_READ")
	field(SCAN, "1 second")
    field(SIML, "$(P)$(Q)SIM")
    field(SIOL, "$(P)$(Q)SIM:HEARTBEAT")
}

record(bo, "$(P)$(Q)MOVE:SP")
{
    field(DESC, "Request move")
	field(DTYP, "asynInt32")
    field(ZNAM, "LOWER")
    field(ONAM, "RAISE")
	field(OUT,  "@asyn(PLC, 0, 5.0) FINS_WR_WRITE_B2")
    field(SIML, "$(P)$(Q)SIM")
    field(SIOL, "$(P)$(Q)SIM:MOVE")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

record(bi, "$(P)$(Q)MOVE:SP:RBV")
{
    field(DESC, "Request move readback")
	field(DTYP, "asynInt32")
    field(ZNAM, "LOWER")
    field(ONAM, "RAISE")
	field(INP,  "@asyn(PLC, 0, 5.0) FINS_WR_READ_B2")
	field(SCAN, "1 second")
    field(SIML, "$(P)$(Q)SIM")
    field(SIOL, "$(P)$(Q)SIM:MOVE")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}
alias("$(P)$(Q)MOVE:SP:RBV", "$(P)$(Q)MOVE")

### SIMULATION RECORDS ###

record(bo, "$(P)$(Q)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(bi, "$(P)$(Q)SIM:MOVE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bi, "$(P)$(Q)SIM:HEARTBEAT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bi, "$(P)$(Q)SIM:STATUS")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

## R78 test PVs

#record(ai, "$(P)$(Q)FINS:RANDOM")
#{
#	field(DTYP, "asynInt32")
#	field(INP,  "@asyn(PLC, 1000, 5.0) FINS_DM_READ")
#	field(SCAN, "5 second")
#    field(FLNK, "$(P)$(Q)FINS:RT")
#}

#record(calc, "$(P)$(Q)RT")
#{
#	field(INPA,  "$(P)$(Q)RANDOM")
#    field(EGU, "%")
#    field(HOPR, "100")
#    field(LOPR, "0")
#    field(CALC, "A * 100 / 6000")
#}

#record(ai, "$(P)$(Q)RANDOM0")
#{
#	field(DTYP, "asynInt32")
#	field(INP,  "@asyn(PLC, 1000, 5.0) FINS_DM_READ_B0")
#	field(SCAN, "5 second")
#}

#record(ai, "$(P)$(Q)RANDOM1")
#{
#	field(DTYP, "asynInt32")
#	field(INP,  "@asyn(PLC, 1000, 5.0) FINS_DM_READ_B2")
#	field(SCAN, "5 second")
#}

