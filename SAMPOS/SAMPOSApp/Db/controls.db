# Read LabVIEW control/indicator "Go X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)X:GOING")
{
	field(DESC, "LabVIEW 'X In Motion'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)X_In_Motion")
    field(SCAN, ".1 second")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}


# Read LabVIEW control/indicator "Go Y" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)Y:GOING")
{
	field(DESC, "LabVIEW 'Y_In_Motion'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Y_In_Motion")
    field(SCAN, ".1 second")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Go Z" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)Z:GOING")
{
	field(DESC, "LabVIEW 'Z_In_Motion'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Z_In_Motion")
    field(SCAN, ".1 second")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Go w" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)W:GOING")
{
	field(DESC, "LabVIEW 'w_In_Motion'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)w_In_Motion")
    field(SCAN, ".1 second")
    field(ZNAM, "NO")
    field(ONAM, "YES")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Go S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)S:GOING")
{
	field(DESC, "LabVIEW 'S_In_Motion'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)S_In_Motion")
    field(SCAN, ".1 second")
    field(ZNAM, "NO")
    field(ONAM, "YES")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Write to LabVIEW control "Go X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)X:GO:SP")
{
	field(DESC, "LabVIEW 'X_Set'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)X_Set")
    field(ZNAM, "STOP")
    field(ONAM, "GO")
}

# Read LabVIEW control/indicator "Current X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)X")
{
	field(DESC, "LabVIEW 'X Position'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X_Position")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Current Y" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Y")
{
	field(DESC, "LabVIEW 'Y Position'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y_Position")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Current Z" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Z")
{
	field(DESC, "LabVIEW 'Z Position'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z_Position")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Current w" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)W")
{
	field(DESC, "LabVIEW 'w Position'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)w_Position")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Current S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)S")
{
	field(DESC, "LabVIEW 'S Position'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)S_Position")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Write to LabVIEW control "New X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)X:SP")
{
	field(DESC, "LabVIEW 'X'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)X")
    field(PREC, "3")
}

# Write to LabVIEW control "New Y" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)Y:SP")
{
	field(DESC, "LabVIEW 'Y'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Y")
    field(PREC, "3")
}

# Write to LabVIEW control "New Z" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)Z:SP")
{
	field(DESC, "LabVIEW 'Z'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Z")
    field(PREC, "3")
}

# Write to LabVIEW control "New w" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)W:SP")
{
	field(DESC, "LabVIEW 'w'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)w")
    field(PREC, "3")
}

# Write to LabVIEW control "New S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)S:SP")
{
	field(DESC, "LabVIEW 'S'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)S")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "Set X read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)X:SP:RBV")
{
	field(DESC, "LabVIEW 'X'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Set Y read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Y:SP:RBV")
{
	field(DESC, "LabVIEW 'Y'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Set Z read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Z:SP:RBV")
{
	field(DESC, "LabVIEW 'Z'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Set w read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)W:SP:RBV")
{
	field(DESC, "LabVIEW 'w'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)w")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Read LabVIEW control/indicator "Set S read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)S:SP:RBV")
{
	field(DESC, "LabVIEW 'S'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)S")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Write to LabVIEW control "Stop" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)STOP:SP")
{
	field(DESC, "LabVIEW 'Stop'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Stop")
    field(ZNAM, "STOP")
    field(ONAM, "Stopping")
}

record(bi, "$(P)PENDANT")
{
	field(DESC, "LabVIEW 'Pendant_Active'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Pendant_Active")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

record(bi, "$(P)LIGHTCURTAIN")
{
	field(DESC, "LabVIEW 'Light_Curtain_Active'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Light_Curtain_Active")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

record(bi, "$(P)EMERGENCYSTOP")
{
	field(DESC, "LabVIEW 'Emergency_Stop_Active'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Emergency_Stop_Active")
    field(SCAN, ".1 second")
	info(archive, "VAL")
    info(INTEREST, "HIGH")
}

