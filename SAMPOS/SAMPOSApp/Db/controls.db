# Read LabVIEW control/indicator "Go X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)X:GOING")
{
	field(DESC, "LabVIEW 'Go X'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Go_X")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Write to LabVIEW control "Go X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)X:GOING:SP")
{
	field(DESC, "LabVIEW 'Go X'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Go_X")
    field(ZNAM, "")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Go Y" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)Y:GOING")
{
	field(DESC, "LabVIEW 'Go Y'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Go_Y")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Write to LabVIEW control "Go Y" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)Y:GOING:SP")
{
	field(DESC, "LabVIEW 'Go Y'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Go_Y")
    field(ZNAM, "")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Go Z" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)Z:GOING")
{
	field(DESC, "LabVIEW 'Go Z'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Go_Z")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Write to LabVIEW control "Go Z" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)Z:GOING:SP")
{
	field(DESC, "LabVIEW 'Go Z'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Go_Z")
    field(ZNAM, "")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Go w" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)W:GOING")
{
	field(DESC, "LabVIEW 'Go w'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Go_w")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Write to LabVIEW control "Go w" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)W:GOING:SP")
{
	field(DESC, "LabVIEW 'Go w'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Go_w")
    field(ZNAM, "")
    field(ONAM, "")
}

# Read LabVIEW control/indicator "Go S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)S:GOING")
{
	field(DESC, "LabVIEW 'Go S'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Go_S")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Write to LabVIEW control "Go S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)S:GOING:SP")
{
	field(DESC, "LabVIEW 'Go S'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Go_S")
    field(ZNAM, "")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Current X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)X")
{
	field(DESC, "LabVIEW 'Current X'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_X")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Current Y" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Y")
{
	field(DESC, "LabVIEW 'Current Y'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_Y")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Current Z" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Z")
{
	field(DESC, "LabVIEW 'Current Z'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_Z")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Current w" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)W")
{
	field(DESC, "LabVIEW 'Current w'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_w")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Current S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)S")
{
	field(DESC, "LabVIEW 'Current S'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_S")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "New X" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)X:SP")
{
	field(DESC, "LabVIEW 'New X'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)New_X")
    field(PREC, "3")
}

# Write to LabVIEW control "New Y" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)Y:SP")
{
	field(DESC, "LabVIEW 'New Y'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)New_Y")
    field(PREC, "3")
}

# Write to LabVIEW control "New Z" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)Z:SP")
{
	field(DESC, "LabVIEW 'New Z'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)New_Z")
    field(PREC, "3")
}

# Write to LabVIEW control "New w" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)W:SP")
{
	field(DESC, "LabVIEW 'New w'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)New_w")
    field(PREC, "3")
}

# Read LabVIEW control/indicator "Go S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bi, "$(P)Go_S_RBV")
{
	field(DESC, "LabVIEW 'Go S'")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Go_S")
    field(SCAN, ".1 second")
    field(ZNAM, "")
    field(ONAM, "")
}

# Write to LabVIEW control "Go S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(bo, "$(P)Go_S")
{
	field(DESC, "LabVIEW 'Go S'")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Go_S")
    field(ZNAM, "")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "Current S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Current_S_RBV")
{
	field(DESC, "LabVIEW 'Current S'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_S")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "New S" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ao, "$(P)S:SP")
{
	field(DESC, "LabVIEW 'New S'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)New_S")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "Set X read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)X:SP:RBV")
{
	field(DESC, "LabVIEW 'Set X read'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Set_X_read")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Set Y read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Y:SP:RBV")
{
	field(DESC, "LabVIEW 'Set Y read'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Set_Y_read")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Set Z read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)Z:SP:RBV")
{
	field(DESC, "LabVIEW 'Set Z read'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Set_Z_read")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Set w read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)W:SP:RBV")
{
	field(DESC, "LabVIEW 'Set w read'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Set_w_read")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Set S read" on "C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi"
record(ai, "$(P)S:SP:RBV")
{
	field(DESC, "LabVIEW 'Set S read'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Set_S_read")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

