<?xml version="1.0" encoding="UTF-8"?>
<!--Initially generated by $Id$ -->
<lvinput xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://epics.isis.rl.ac.uk/lvDCOMinput/1.0" xsi:schemaLocation="http://epics.isis.rl.ac.uk/lvDCOMinput/1.0 lvDCOMinput.xsd">
  <!--Full path to external interface vi used for triggering LabVIEW events when extint="true" below -->
  <extint path="$(TOP)/lvDCOMApp/src/extint/Main/Library/External Interface - Set Value.vi"/>
  <!--Definition of a configSection, the second argument of the IOC lvDCOMConfigure() command -->
  <section name="frontpanel">
    <!--TODO: edit path attribute in <vi /> to contain a full absolute path, you can also use any EPICS macro known to the IOC e.g. $(TOP) -->
    <vi path="C:/LabVIEW Modules/Instruments/Enginx/Positioner/EnginX - Positioner - System Functions.llb/EnginX - Positioner - Front Panel.vi">
      <!--The <param /> maps an asyn driver parameter "name" (referenced in the EPICS .db) to the LabVIEW item "target" -->
      <!--TODO: set extint="true" for controls that need LabVIEW events triggering when they are written to -->
      <!--Ignoring LabVIEW control "Error" as it has invalid type "Cluster"-->
      <param name="Message" type="string">
        <read method="GCV" target="Message"/>
        <set method="SCV" extint="false" target="Message"/>
      </param>
      <param name="Exit" type="boolean">
        <items>
          <item name="Exit" value="0"/>
        </items>
        <read method="GCV" target="Exit"/>
        <set method="SCV" extint="false" target="Exit"/>
      </param>
      <param name="Activity" type="boolean">
        <items/>
        <read method="GCV" target="Activity"/>
        <set method="SCV" extint="false" target="Activity"/>
      </param>
      <param name="Go_X" type="boolean">
        <items/>
        <read method="GCV" target="Go X"/>
        <set method="SCV" extint="false" target="Go X"/>
      </param>
      <param name="Go_Y" type="boolean">
        <items/>
        <read method="GCV" target="Go Y"/>
        <set method="SCV" extint="false" target="Go Y"/>
      </param>
      <param name="Go_Z" type="boolean">
        <items/>
        <read method="GCV" target="Go Z"/>
        <set method="SCV" extint="false" target="Go Z"/>
      </param>
      <param name="Go_w" type="boolean">
        <items/>
        <read method="GCV" target="Go w"/>
        <set method="SCV" extint="false" target="Go w"/>
      </param>
      <param name="Current_X" type="float64">
        <read method="GCV" target="Current X"/>
        <set method="SCV" extint="false" target="Current X"/>
      </param>
      <param name="Current_Y" type="float64">
        <read method="GCV" target="Current Y"/>
        <set method="SCV" extint="false" target="Current Y"/>
      </param>
      <param name="Current_Z" type="float64">
        <read method="GCV" target="Current Z"/>
        <set method="SCV" extint="false" target="Current Z"/>
      </param>
      <param name="Current_w" type="float64">
        <read method="GCV" target="Current w"/>
        <set method="SCV" extint="false" target="Current w"/>
      </param>
      <param name="New_X" type="float64">
        <read method="GCV" target="New X"/>
        <set method="SCV" extint="false" target="New X"/>
      </param>
      <param name="New_Y" type="float64">
        <read method="GCV" target="New Y"/>
        <set method="SCV" extint="false" target="New Y"/>
      </param>
      <param name="New_Z" type="float64">
        <read method="GCV" target="New Z"/>
        <set method="SCV" extint="false" target="New Z"/>
      </param>
      <param name="New_w" type="float64">
        <read method="GCV" target="New w"/>
        <set method="SCV" extint="false" target="New w"/>
      </param>
      <param name="Stop" type="boolean">
        <items>
          <item name="STOP" value="0"/>
          <item name="Stopping" value="1"/>
          <item name="STOP" value="2"/>
          <item name="Stopping" value="3"/>
        </items>
        <read method="GCV" target="Stop"/>
        <set method="SCV" extint="false" target="Stop"/>
      </param>
      <param name="Go_S" type="boolean">
        <items/>
        <read method="GCV" target="Go S"/>
        <set method="SCV" extint="false" target="Go S"/>
      </param>
      <param name="Current_S" type="float64">
        <read method="GCV" target="Current S"/>
        <set method="SCV" extint="false" target="Current S"/>
      </param>
      <param name="New_S" type="float64">
        <read method="GCV" target="New S"/>
        <set method="SCV" extint="false" target="New S"/>
      </param>
      <param name="Set_X_read" type="float64">
        <read method="GCV" target="Set X read"/>
        <set method="SCV" extint="false" target="Set X read"/>
      </param>
      <param name="Set_Y_read" type="float64">
        <read method="GCV" target="Set Y read"/>
        <set method="SCV" extint="false" target="Set Y read"/>
      </param>
      <param name="Set_Z_read" type="float64">
        <read method="GCV" target="Set Z read"/>
        <set method="SCV" extint="false" target="Set Z read"/>
      </param>
      <param name="Set_w_read" type="float64">
        <read method="GCV" target="Set w read"/>
        <set method="SCV" extint="false" target="Set w read"/>
      </param>
      <param name="Set_S_read" type="float64">
        <read method="GCV" target="Set S read"/>
        <set method="SCV" extint="false" target="Set S read"/>
      </param>
    </vi>
  </section>
</lvinput>
