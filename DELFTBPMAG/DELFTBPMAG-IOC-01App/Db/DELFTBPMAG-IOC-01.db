## asyn record for debugging etc.
record(asyn, "$(P)$(Q)ASYNREC")
{
    field(DTYP, "asynRecordDevice")
    field(PORT, "$(PORT)")
## may need to set these?
#	field(IEOS, ";")
#	field(OEOS, "*")
}

record(bo, "$(P)$(Q)CONTROL:START")
{
    field(DTYP, "stream")
    field(DESC, "Start Controlling")
    field(OUT,  "@DELFTBPMAG.proto startControlling $(PORT)")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(bo, "$(P)$(Q)CONTROL:STOP")
{
    field(DTYP, "stream")
    field(DESC, "Stop Controlling")
    field(OUT,  "@DELFTBPMAG.proto stopControlling $(PORT)")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(bo, "$(P)$(Q)CONTROL:HOLD")
{
    field(DTYP, "stream")
    field(DESC, "Hold digital control")
    field(OUT,  "@DELFTBPMAG.proto holdDigitalControl $(PORT)")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(bo, "$(P)$(Q)RESET")
{
    field(DTYP, "stream")
    field(DESC, "Reset")
    field(OUT,  "@DELFTBPMAG.proto resetController $(PORT)")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(bo, "$(P)$(Q)CONTROL:SETDEF")
{
    field(DTYP, "stream")
    field(DESC, "Restore control defaults")
    field(OUT,  "@DELFTBPMAG.proto restoreControlDefaults $(PORT)")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(bo, "$(P)$(Q)DAC:TOGGLE")
{
    field(DTYP, "stream")
    field(DESC, "Toggle DAC")
    field(OUT,  "@DELFTBPMAG.proto toggleDAC $(PORT)")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(mbbi, "$(P)$(Q)STATUS")
{
    field(DTYP, "stream")
    field(DESC, "Status")
    field(INP,  "@DELFTBPMAG.proto readStatus $(PORT)")
	field(ZRVL, 0)
	field(ZRST, "Control")
	field(ONVL, 1)
	field(ONST, "Stop")
	field(TWVL, 2)
	field(TWST, "Hold")
    field(SCAN, "1 second")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(mbbi, "$(P)$(Q)MODE")
{
    field(DTYP, "stream")
    field(DESC, "Mode")
    field(INP,  "@DELFTBPMAG.proto readStatus $(PORT)")
	field(ZRVL, 0)
	field(ZRST, "Local")
	field(ONVL, 1)
	field(ONST, "Remote")
    field(SCAN, "1 second")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

# x and y fields are returned by device read, so this updates FIELD:Y too
record(ai, "$(P)$(Q)FIELD:X")
{
    field(DTYP, "stream")
    field(DESC, "X field")
    field(INP,  "@DELFTBPMAG.proto readFieldMeasurement($(P)$(Q)FIELD:Y) $(PORT)")
	field(EGU, "mT")
    field(SCAN, "1 second")
	field(PREC, 3)
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

# updated by FIELD:X via protocol file
record(ai, "$(P)$(Q)FIELD:Y")
{
    field(DESC, "Y field")
	field(EGU, "mT")
	field(PREC, 3)
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}

record(longout, "$(P)$(Q)KP:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set P gain")
    field(OUT,  "@DELFTBPMAG.proto setPGain $(PORT)")
}

record(longin, "$(P)$(Q)KP")
{
    field(DTYP, "stream")
    field(DESC, "Read P gain")
    field(INP,  "@DELFTBPMAG.proto readPGain $(PORT)")
    field(SCAN, "1 second")
}

record(longout, "$(P)$(Q)KI:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set I gain")
    field(OUT,  "@DELFTBPMAG.proto setIGain $(PORT)")
}

record(longin, "$(P)$(Q)KI")
{
    field(DTYP, "stream")
    field(DESC, "Read I gain")
    field(INP,  "@DELFTBPMAG.proto readIGain $(PORT)")
    field(SCAN, "1 second")
}

record(longout, "$(P)$(Q)KD:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set D gain")
    field(OUT,  "@DELFTBPMAG.proto setDGain $(PORT)")
}

record(longin, "$(P)$(Q)KD")
{
    field(DTYP, "stream")
    field(DESC, "Read D gain")
    field(INP,  "@DELFTBPMAG.proto readDGain $(PORT)")
    field(SCAN, "1 second")
}

record(longout, "$(P)$(Q)SP1:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set setpoint 1")
    field(OUT,  "@DELFTBPMAG.proto setSetpoint(1) $(PORT)")
	field(EGU, "uT")
}

record(ai, "$(P)$(Q)SP1")
{
    field(DTYP, "stream")
    field(DESC, "Read setpoint 1")
    field(INP,  "@DELFTBPMAG.proto readSetpoint(1) $(PORT)")
	field(EGU, "mT")
	field(PREC, 3)
    field(SCAN, "1 second")
}

record(longout, "$(P)$(Q)SP2:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set setpoint 2")
    field(OUT,  "@DELFTBPMAG.proto setSetpoint(2) $(PORT)")
	field(EGU, "uT")
}

record(ai, "$(P)$(Q)SP2")
{
    field(DTYP, "stream")
    field(DESC, "Read setpoint 2")
    field(INP,  "@DELFTBPMAG.proto readSetpoint(2) $(PORT)")
	field(EGU, "mT")
	field(PREC, 3)
    field(SCAN, "1 second")
}

record(longout, "$(P)$(Q)SP3:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set setpoint 3")
    field(OUT,  "@DELFTBPMAG.proto setSetpoint(3) $(PORT)")
	field(EGU, "uT")
}

record(ai, "$(P)$(Q)SP3")
{
    field(DTYP, "stream")
    field(DESC, "Read setpoint 3")
    field(INP,  "@DELFTBPMAG.proto readSetpoint(3) $(PORT)")
	field(EGU, "mT")
	field(PREC, 3)
    field(SCAN, "1 second")
}

record(longout, "$(P)$(Q)SP4:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set setpoint 4")
    field(OUT,  "@DELFTBPMAG.proto setSetpoint(4) $(PORT)")
	field(EGU, "uT")
}

record(ai, "$(P)$(Q)SP4")
{
    field(DTYP, "stream")
    field(DESC, "Read setpoint 4")
    field(INP,  "@DELFTBPMAG.proto readSetpoint(4) $(PORT)")
	field(PREC, 3)
	field(EGU, "mT")
    field(SCAN, "1 second")
}

record(longout, "$(P)$(Q)MAXB:SP")
{
    field(DTYP, "stream")
    field(DESC, "Set maxb")
    field(OUT,  "@DELFTBPMAG.proto setMaxField $(PORT)")
	field(EGU, "uT")
}

record(ai, "$(P)$(Q)MAXB")
{
    field(DTYP, "stream")
    field(DESC, "Read maxb")
    field(INP,  "@DELFTBPMAG.proto readMaxField $(PORT)")
	field(EGU, "mT")
	field(PREC, 3)
    field(SCAN, "1 second")
}

record(longin, "$(P)$(Q)SPR")
{
    field(DTYP, "stream")
    field(DESC, "Set point reached")
    field(INP,  "@DELFTBPMAG.proto setpointReached $(PORT)")
    field(SCAN, "1 second")
}


