record(scalcout, "$(P)MANAGERMODE")
{
    field(ASG, "READONLY")
    field(DESC, "Non-zero if manager is required")
    field(PINI, "YES")
    field(INPA, "$(PVPREFIX)CS:MANAGER CP")
    field(BB, "$(ASG)")
    field(CALC, "A = 0 && BB = 'MANAGER'")
    field(OOPT, "Every Time")
}

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
    field(PINI, "YES")
}
    
record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(bo, "$(P)ABORT")
{
    field(DESC, "Send kill signal to device")
    # Streamdevice doesn't seem to like doing an 'in' command without reading any data, so tell 
    # it to read device ID and send it to $(P)STATUS:_RAW.A as usual.
    field(OUT, "@devieg.proto abort($(P)STATUS:_RAW) $(PORT)")
    field(DTYP, "stream")
}

record(mbbo, "$(P)MODE:SP")
{
    field(DESC, "Operating mode setpoint")
    field(OUT, "@devieg.proto setMode $(PORT)")
    field(DTYP, "stream")
    
    field(ONVL, "1")
    field(ONST, "Pump, Purge & Fill")
    field(TWVL, "2")
    field(TWST, "Pump")
    field(THVL, "3")
    field(THST, "Gas Flow")
    field(FRVL, "4")
    field(FRST, "Gas - Single Shot")
    
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MODE:SP")
    field(SDIS, "$(P)DISABLE")
}

record(ai, $(P)STATUS:_SCAN)
{
    field(INP, "@devieg.proto getStatus($(P)STATUS:_RAW) $(PORT)")
    field(SCAN, "1 second")
    field(FLNK, "$(P)STATUS:_RAW")
    field(DTYP, "stream")
    
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SCAN")
    field(SDIS, "$(P)DISABLE")
}

record(calcout, "$(P)STATUS:_RAW")
{
    field(CALC, "0")
    field(FLNK, "$(P)STATUS:_FANOUT")
}

record(seq, "$(P)STATUS:_FANOUT")
{
    field(DOL1, "$(P)STATUS:_RAW.A")
    field(LNK1, "$(P)ID PP")

    field(DOL2, "$(P)STATUS:_RAW.B")
    field(LNK2, "$(P)MODE PP")

    field(DOL3, "$(P)STATUS:_RAW.C")
    field(LNK3, "$(P)VALVE:STAT PP")

    field(DOL4, "$(P)STATUS:_RAW.D")
    field(LNK4, "$(P)ERROR PP")

    field(DOL5, "$(P)STATUS:_RAW.E")
    field(LNK5, "$(P)PRES:BUFFER:HIGH PP")
    
    field(DOL6, "$(P)STATUS:_RAW.F")
    field(LNK6, "$(P)PRES:LOW PP")
    
    field(DOL7, "$(P)STATUS:_RAW.G")
    field(LNK7, "$(P)PRES:HIGH PP")
    
    field(DOL8, "$(P)STATUS:_RAW.H")
    field(LNK8, "$(P)PRES:RAW PP")
    
    field(SELM, "All")
}

record(ai, "$(P)ID")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "ID of this IEG")
}

record(mbbi, "$(P)MODE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "Operating mode")
    
    field(ZRVL, "0")
    field(ZRST, "Dormant")
    field(ONVL, "1")
    field(ONST, "Pump, Purge & Fill")
    field(TWVL, "2")
    field(TWST, "Pump")
    field(THVL, "3")
    field(THST, "Gas Flow")
    field(FRVL, "4")
    field(FRST, "Gas - Single Shot")

    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MODE")
    field(SDIS, "$(P)DISABLE")    
    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(mbbiDirect, "$(P)VALVE:STAT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "Status of the valves")
    # B0 = Pump valve open
    # B1 = Buffer valve open
    # B2 = Gas valve open
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(mbbi, "$(P)ERROR")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "Error from device")
    
    field(ZRVL, "0")
    field(ZRST, "No error")
    
    field(ONVL, "1")
    field(ONST, "INVALID")
    field(ONSV, "MAJOR")
    
    field(TWVL, "2")
    field(TWST, "Samp vol: leak detected")
    field(TWSV, "MAJOR")
    
    field(THVL, "3")
    field(THST, "Samp vol: no vacuum")
    field(THSV, "MAJOR")
    
    field(FRVL, "4")
    field(FRST, "Buff vol: did not fill")
    field(FRSV, "MAJOR")
    
    field(FVVL, "5")
    field(FVST, "Samp vol: fill iterations")
    field(FVSV, "MAJOR")
    
    field(SXVL, "6")
    field(SXST, "Samp vol: pump timeout")
    field(SXSV, "MAJOR")
    
    field(SVVL, "7")
    field(SVST, "Samp vol: fill timeout")
    field(SVSV, "MAJOR")
    
    field(EIVL, "8")
    field(EIST, "Buff or samp vol leak")
    field(EISV, "MAJOR")
    
    field(NIVL, "9")
    field(NIST, "Shot didn't raise press.")
    field(NISV, "MAJOR")
    
    field(TEVL, "10")
    field(TEST, "Manual stop")
    field(TESV, "MAJOR")
    
    field(ELVL, "11")
    field(ELST, "Vacuum tank interlock")
    field(ELSV, "MAJOR")
    
    field(TVVL, "12")
    field(TVST, "Samp vol: leak detected")
    field(TVSV, "MAJOR")
    
    field(TTVL, "13")
    field(TTST, "Sensor broken/disconnect")
    field(TTSV, "MAJOR")

    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(bi, "$(P)PRES:BUFFER:HIGH")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "Zero if buffer pressure is too high")
    field(ZSV, "MINOR")
	field(ZNAM, "Out of range")
	field(ONAM, "In range")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(bi, "$(P)PRES:HIGH")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "Non-zero if pressure is too high")
	field(OSV, "MINOR")
	field(ZNAM, "In range")
	field(ONAM, "Out of range")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(bi, "$(P)PRES:LOW")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "Non-zero if pressure is too low")
	field(OSV, "MINOR")
	field(ZNAM, "In range")
	field(ONAM, "Out of range")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ai, "$(P)PRES:RAW")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(DESC, "Device pressure")
}

record(calc, "$(P)PRES:CALC")
{
    field(DESC, "Device pressure, as calculated")
	
    field(ASG, "READONLY")
    field(INPA, "$(P)PRES:RAW CP MS")
    # Default to no calibration if macros not set.
    field(CALC, "A*$(CALIBRATION_A)+$(CALIBRATION_B)")
    
    field(LOW, "0")
    field(HIGH, "350")
	field(LSV, "MAJOR")
	field(HSV, "MAJOR")
	
    field(EGU, "mbar")
}

record(calc, "$(P)PRES:OUT:CALC") {
    field(DESC, "Restrict calculated pressure to [0,350] mbar")
	
    field(ASG, "READONLY")
    field(INPA, "$(P)PRES:CALC CP MS")
    # Default to no calibration if macros not set.
    field(CALC, "MAX(MIN(INPA,350.0),0.0)")	
    field(EGU, "mbar")
}

record(ai, "$(P)PRES:OUT")
{
    field(DESC, "Device pressure (restricted [0,350] mbar)")
    field(INP, "$(P)PRES:OUT:CALC CP MS")
    field(EGU, "mbar")
    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
    info(alarm, "IEG")
}

# User requirements are uncertain and subject to change.
# Use the restricted range pressure as the primary output for now.
# Aliasing makes it easier to change in future if needed
# If we're concerned about stability in blocks/scripts, use the
# unaliased PVs
alias("$(P)PRES:OUT", "$(P)PRES")

record(scalcout, "$(P)PRES:GUI:NMES")
{
	field(DESC, "GUI pressure reading when in range")
    field(INPA, "$(P)PRES CP")
    field(CALC, "PRINTF('%.2f mbar',A)")
}

record(scalcout, "$(P)PRES:GUI:LMES")
{
	field(DESC, "GUI pressure reading when le 0")
    field(CALC, "'<= 0 mbar'")
}

record(scalcout, "$(P)PRES:GUI:HMES")
{
	field(DESC, "GUI pressure reading when gt 350")
    field(CALC, "'> 350 mbar'")
}

record(scalcout, "$(P)PRES:GUI")
{
    # Format the pressure as '> 350' if pressure 
    # greater than 350 else format to 2 d.p 
    # This is for use on the OPI, which looks at the OSV field.
    field(ASG, "READONLY")
    field(DESC, "GUI pressure reading")
    field(INPA, "$(P)PRES CP MS")
	field(INAA, "$(P)PRES:GUI:HMES")
	field(INBB, "$(P)PRES:GUI:LMES")
	field(INCC, "$(P)PRES:GUI:NMES")
    field(CALC, "A>350?AA:(A<=0?BB:CC)")
}

#
# Simulation record
#

record(ao, "$(P)SIM:MODE:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:MODE:SP","$(P)SIM:MODE")

record(ai, "$(P)SIM:SCAN")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL, "0")
    field(PINI, "YES")
}
