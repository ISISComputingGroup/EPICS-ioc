# RELEASE - Location of external support modules
#
# IF YOU MAKE ANY CHANGES to this file you must subsequently
# do a "gnumake rebuild" in this application's top level
# directory.
#
# The build process does not check dependencies against files
# that are outside this application, thus you should do a
# "gnumake rebuild" in the top level directory after EPICS_BASE
# or any other external module pointed to below is rebuilt.
#
# Host- or target-specific settings can be given in files named
#  RELEASE.$(EPICS_HOST_ARCH).Common
#  RELEASE.Common.$(T_A)
#  RELEASE.$(EPICS_HOST_ARCH).$(T_A)
#
# This file is parsed by both GNUmake and an EPICS Perl script,
# so it can ONLY contain definititions of paths to other support
# modules, variable definitions that are used in module paths,
# and include statements that pull in other RELEASE files.
# Variables may be used before their values have been set.
# Build variables that are NOT used in paths should be set in
# the CONFIG_SITE file.

# Variables and paths to dependent modules:
#MODULES = /path/to/modules
#MYMODULE = $(MODULES)/my-module

# When used as an embedded TOP
OPCUA = $(TOP)/..
# NOTE: if the parent module sets INSTALL_LOCATION, OPCUA must be set
# explicitly to the absolute path of that, preferably in a RELEASE.local
# file. (See README and issue #63)

# EPICS_BASE should appear last so earlier modules can override stuff:
#EPICS_BASE = /opt/epics/3.15.5

# Set RULES here if you want to use build rules from somewhere
# other than EPICS_BASE:
#RULES = $(MODULES)/build-rules

# Inside an embedded TOP, use the following definitions
# pointing to the configuration of the parent module
-include $(TOP)/../../RELEASE.local
-include $(TOP)/../../configure/RELEASE.local
#-include $(TOP)/../configure/RELEASE.local
-include $(TOP)/configure/RELEASE.local

# Inside a standalone TOP, use the following definitions instead
#-include $(TOP)/../RELEASE.local
#-include $(TOP)/../configure/RELEASE.local
#-include $(TOP)/configure/RELEASE.local
