#
# DB File for the FZJ Digital Drive Fermi Chopper Controller
#
#
record(bo, "$(P)DISABLE")
{
  field(DESC, "Disable comms")
  field(PINI, "YES")
  field(VAL, "$(DISABLE=0)")
  field(OMSL, "supervisory")
  field(ZNAM, "COMMS ENABLED")
  field(ONAM, "COMMS DISABLED")
}
#
record(stringin, "$(P)ADDRESS")
{   
  field(DESC, "Chopper name/address")
  field(PINI, "YES")
  field(VAL, "$(ADDR)")
}
#
#reference speed [Hz]
#RESP!
#20.00 to 26.00 and 32.00 to 100.00
#only assumed from masterchopper (chopper 3)
#two decimal places
#
## **** RATI command looks to be unused in the protocol for the controller ****
#
#ratio
#RATI!
#1 or 2
#ratio to reference speed, 1 = 1:1, 2 = 1:2,
#only assumed from chopper 3
#no decimal places
#
#factor
#FACT!
#1:12
#multiplication factor of reference speed
#speed setpoint
#no decimal places
#
#setpoint phase [º]
#PHAS!
#0.01 to 359.99
#two decimal places
#
#switch on magnetic bearing
#MAGB!
#ON
#it is not possible to switch off the magnetic bearing by command
#
#drive start/stop
#DRIV!
#START or STOP
#
#acknowledge messages
#ACKN!
#ON
#
#
# first record causes concatenated status string to be read
# then protocol file splits response into separate values
# and writes them to specified PVs
#
# See the following VI for details on how the reply to the ASTA? command is formed:
# MAPS_251115_C6713_LV2010\RAL Neu\MAPS_251115_C6713_LV2014\LabVIEW\TCP.llb\TCP_Kommando_ASTA?.vi
#
# reference speed [Hz]
# RSPE?
# 20.00 to 26.00 and 32.00 to 100.00
# relating to master-chopper (chopper 3)
# two decimal places
#
record(ai, "$(P)FREQ:REF")
{
    field(DESC, "Reference Frequency")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(EGU, "Hz")
    field(PREC, "2")
    field(INP, "@devFZJ_DDFermiChopper.proto getASTA($(P)) $(PORT)")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
#
# setpoint speed [Hz]
# SSPE?
# 20.00 to 26.00 and 32.00 to 100.00
# two decimal places
#
record(ai, "$(P)FREQ:SP:RBV")
{
    field(DESC, "Frequency Setpoint")
    field(EGU, "Hz")
    field(PREC, "2")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
# **** RATI command looks to be unused in the protocol for the controller ****
# 
## ratio
## RATI?
## 1 or 2
## ratio to reference speed,
## 1 = 1:1, 2 = 1:2,
## no decimal places
#
#record(bi, "$(P)RATIO")
#{
#    field(DESC, "Ratio to reference frequency")
#    # field(EGU, "")
#    field(ZNAM, "1:1")
#    field(0NAM, "1:2")
#    info(INTEREST, "HIGH")
#    info(archive, "VAL")
#}
#
# current speed [Hz]
# SPEE?
# 0.00 to 100.00
# two decimal places

record(ai, "$(P)FREQ")
{
    field(DESC, "Current Frequency")
    field(EGU, "Hz")
    field(PREC, "2")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## setpoint phase [º]
## SPHA?
## 0.01 to 359.99
## two decimal places
#
record(ai, "$(P)PHAS:SP:RBV")
{
    field(DESC, "Phase Setpoint")
    field(EGU, "deg")
    field(PREC, "2")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## current phase [º]
## PHAS?
## 0.00 to 360.00 or –1.00
## if the current rotary frequency did not reach the setpoint frequency, the value is –1.00
## two decimal places
#
record(ai, "$(P)PHAS")
{
    field(DESC, "Current Phase")
    field(EGU, "deg")
    field(PREC, "2")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## status of phase
## PHOK?
## OK or NOK
## phase deviation = 0.1º means that the phase is OK
#
record(bi, "$(P)PHAS:STATUS")
{
    field(DESC, "Phase Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## magnetic bearing
## MBON?
## ON or OFF
#
record(bi, "$(P)MB")
{
    field(DESC, "Magnetic Bearing")
    field(ZNAM, "ON")
    field(ONAM, "OFF")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## status of magnetic bearing
## MBOK?
## OK or NOK
#
record(bi, "$(P)MB:STATUS")
{
    field(DESC, "Magnetic Bearing Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## magnetic bearing integrator [%]
## MBIN?
## -100.0 to 100.0
## integrator of regulator for magnetic bearing
## one decimal place
#
record(ai, "$(P)MB:INT")
{
    field(DESC, "Mag Bearing Regulator Integrator")
    field(EGU, "%")
    field(PREC, "1")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## drive
## DRON?
## ON or OFF
#
record(bi, "$(P)DRIVE")
{
    field(DESC, "Drive")
    field(ZNAM, "ON")
    field(ONAM, "OFF")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## status of drive
## SDRI?
## START or STOP
#
record(bi, "$(P)DRIVE:STATUS")
{
    field(DESC, "Drive Status")
    field(ZNAM, "START")
    field(ONAM, "STOP")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## drive current L1 [A]
## DRL1?
## 0.00 to 15.00
## two decimal places
#
record(ai, "$(P)DRIVE:PHASE1:CURR")
{
    field(DESC, "Drive Current Phase 1")
    field(EGU, "A")
    field(PREC, "2")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## drive current L2 [A]
## DRL2?
## 0.00 to 15.00
## two decimal places
#
record(ai, "$(P)DRIVE:PHASE2:CURR")
{
    field(DESC, "Drive Current Phase 2")
    field(EGU, "A")
    field(PREC, "2")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## drive current L3 [A]
## DRL3?
## 0.00 to 15.00
## two decimal places
#
record(ai, "$(P)DRIVE:PHASE3:CURR")
{
    field(DESC, "Drive Current Phase 3")
    field(EGU, "A")
    field(PREC, "2")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## rotating direction
## RODI?
## CLOCK or ANTICLOCK
## in view of the drive
#
record(bi, "$(P)DRIVE:DIR")
{
    field(DESC, "Rotation Direction")
    field(ZNAM, "CW")
    field(ONAM, "CCW")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## Parking Position
## PPOS?
## OK or NOK
## OK if chopper is in open position
#
record(bi, "$(P)PARKED:OPEN:STATUS")
{
    field(DESC, "Parked Open Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}
#
## drive temperature [ºC]
## DRIT?
## 0.00 to 150.00
## error if higher than 70.00ºC,
## two decimal places
#
record(ai, "$(P)DRIVE:TEMP")
{
    field(DESC, "Drive Temperature")
    field(EGU, "C")
    field(PREC, "2")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## input clock [Hz]
## INCL?
## 0.00 to 100.00
## two decimal places
#
record(ai, "$(P)INPUTCLOCK")
{
    field(DESC, "Input Clock Frequency")
    field(EGU, "Hz")
    field(PREC, "2")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## outage of the phase [s]
## OUPH?
## 0.00 to 7257600.00
## if one counter value = 7257600s (= 12 weeks), then self-acting reset of all counters triggered
## two decimal places
#
record(ai, "$(P)PHAS:OUTAGE")
{
    field(DESC, "Time out of Phase")
    field(EGU, "s")
    field(PREC, "2")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## master-chopper
## MACH?
## C01, C02, C2B or C03
## can be called from all choppers
#
record(mbbi, "$(P)MASTER")
{
    field(DESC, "Master Chopper")
    field(ZRVL, 0)
	field(ONVL, 1)
	field(TWVL, 2)
	field(THVL, 3)
	field(ZRST, "C01")
	field(ONST, "C02")
	field(TWST, "C2B")
	field(THST, "C03")     
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## log data
## LOON?
## ON or OFF
#
record(bi, "$(P)LOGGING")
{
    field(DESC, "Logging")
    field(ZNAM, "ON")
    field(ONAM, "OFF")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## linear motion slide release
## LMSR?
## OK or NOK
## related to chopper 2
#
record(bi, "$(P)LMSR:STATUS")
{
    field(DESC, "Linear Motion Slide Release Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## DSP function control
## DSPM?
## OK or NOK
#
record(bi, "$(P)DSP:STATUS")
{
    field(DESC, "DSP Function Control Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - external release
## EROK?
## OK or NOK
#
record(bi, "$(P)INTERLOCK:ER:STATUS")
{
    field(DESC, "Interlock - External Release Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - vacuum
## VAOK?
## OK oder NOK
#
record(bi, "$(P)INTERLOCK:VAC:STATUS")
{
    field(DESC, "Interlock - Vacuum Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - rotary frequency monitoring
## SMOK?
## OK or NOK
#
record(bi, "$(P)INTERLOCK:FREQMON:STATUS")
{
    field(DESC, "Interlock - Rotary Freq Mon Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - magnetic bearing amplifier temperature
## MBAT?
## OK or NOK
#
record(bi, "$(P)INTERLOCK:MB:AMP:TEMP:STATUS")
{
    field(DESC, "Interlock - Mag Brng Amp Temp Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - magnetic bearing amplifier current
## MBAC?
## OK or NOK
#
record(bi, "$(P)INTERLOCK:MB:AMP:CURR:STATUS")
{
    field(DESC, "Interlock - Mag Brng Amp Curr Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - drive amplifier temperature
## DRAT?
## OK or NOK
#
record(bi, "$(P)INTERLOCK:DRIVE:AMP:TEMP:STATUS")
{
    field(DESC, "Interlock - Drive Amp Temp Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - drive amplifier current
## DRAC?
## OK or NOK
#
record(bi, "$(P)INTERLOCK:DRIVE:AMP:CURR:STATUS")
{
    field(DESC, "Interlock - Drive Amp Curr Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
## interlock - UPS
## PSOK?
## OK or NOK
#
record(bi, "$(P)INTERLOCK:UPS:STATUS")
{
    field(DESC, "Interlock - UPS Status")
    field(ZNAM, "OK")
    field(ONAM, "NOK")    
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}
#
#record(bi, "$(P)MB:STATUS")
#{
#    field(DESC, "Magnetic Bearing Status")
#    field(SCAN, "1 second")
#    field(DTYP, "stream")
#    field(INP,  "@devFZJ_DDFermiChopper.proto getMBON $(PORT)")
#    field(ZNAM, "OFF")
#    field(ONAM, "ON")
#    #field(SIML, "$(P)SIM")
#    #field(SIOL, "$(P)SIM:MBON")
#    #field(SDIS, "$(P)DISABLE")
#    info(INTEREST, "MEDIUM")
#    info(archive, "VAL")
#}
#