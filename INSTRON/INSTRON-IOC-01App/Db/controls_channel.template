record(ao, "$(P)$(CHAN):STEP:TIME:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devInstron.proto setStepTime($(CHAN_NUM)) $(PORT)")
    field(PREC, "3")
}

record(ai, "$(P)$(CHAN):STEP:TIME")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devInstron.proto getStepTime($(CHAN_NUM)) $(PORT)")
    field(PREC, "3")
}

record(mbbo, "$(P)$(CHAN):ABS:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devInstron.proto setChanWaveType($(CHAN_NUM)) $(PORT)")
    field(ZRST, "Ramp")
    field(ONST, "Dual ramp")
    field(TWST, "Trapezium")
    field(THST, "Absolute ramp")
    field(FRST, "Absolute hold ramp")
    field(FVST, "Absolute rate ramp")
}

record(mbbi, "$(P)$(CHAN):ABS")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devInstron.proto getChanWaveType($(CHAN_NUM)) $(PORT)")
    field(ZRST, "Ramp")
    field(ONST, "Dual ramp")
    field(TWST, "Trapezium")
    field(THST, "Absolute ramp")
    field(FRST, "Absolute hold ramp")
    field(FVST, "Absolute rate ramp")    
}

record(ao, "$(P)$(CHAN):RAW:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devInstron.proto setRampAmpSP($(CHAN_NUM)) $(PORT)")
    field(PREC, "3")
}

record(ai, "$(P)$(CHAN):RAW:SP:RBV")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devInstron.proto getRampAmpSP($(CHAN_NUM)) $(PORT)")
    field(PREC, "3")
}

record(ai, "$(P)$(CHAN):RAW")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devInstron.proto getCurrentFeedback($(CHAN_NUM)) $(PORT)")
    field(PREC, "3")
    field(FLNK, "$(P)$(CHAN):TO")
}

record(ao, "$(P)$(CHAN):TOLERANCE")
{
    field(DTYP, "Soft Channel")
    field(VAL, "$(CHAN_TOL)")
    field(PREC, "3")
    field(FLNK, "$(P)$(CHAN):SP:_UPDATELIMITS")
    field(PINI, "YES")
}

record(ao, "$(P)$(CHAN):SP")
{
    field(VAL, "1")
    field(FLNK, "$(P)$(CHAN):SP:_NEWDATA PP")
}

record(fanout, "$(P)$(CHAN):SP:_NEWDATA")
{
    field(LNK1, "$(P)$(CHAN):FROM PP")
    field(LNK2, "$(P)$(CHAN):SP:_UPDATELIMITS PP")
    field(SELM, "All")
}

record(ai, "$(P)$(CHAN):SP:RBV")
{
    field(VAL, "1")
    field(FLNK, "$(P)$(CHAN):SP:_UPDATELIMITS")
    # Limits will be updated by $(P)$(CHAN):SP:_UPDATELIMITS
    field(HIGH, "0")
    field(LOW, "0")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
}

record(ai, "$(P)$(CHAN)")
{
    field(DTYP, "Soft Channel")
}

record(transform, "$(P)$(CHAN):SP:_UPDATELIMITS")
{
    field(INPA, "$(P)$(CHAN):TOLERANCE")
    field(INPB, "$(P)$(CHAN):SP")
  
    field(CLCC, "B+A")
    field(CLCD, "B-A")
  
    field(OUTC, "$(P)$(CHAN):SP:RBV.HIGH PP")
    field(OUTD, "$(P)$(CHAN):SP:RBV.LOW PP")
  
}

record(ai, "$(P)$(CHAN):SCALE")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devInstron.proto getChanScale($(CHAN_NUM)) $(PORT)")
    field(PREC, "3")
}

record(ai, "$(P)$(CHAN):TYPE")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devInstron.proto getType($(CHAN_NUM),$(P)$(CHAN)) $(PORT)")
    field(PREC, "3")
}

record(ai, "$(P)$(CHAN):TYPE:STANDARD")
{
    field(DTYP, "Soft Channel")
    field(PREC, "3")
}
