#######################################################
#
# DB file for MKSPDR2000 temperature controller
#
#######################################################
#
# Activities needed and their associated PVs
# Pressure 1 READ $(P)PRESSURE:1
# Pressure 2 READ $(P)PRESSURE:2
# Units      READ $(P)UNITS
# Scale 1    READ $(P)SCALE:1
# Scale 2    READ $(P)SCALE:2
# Version    READ $(P)VERSION

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(bo, "$(P)DISABLE")
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "0")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

###################
#### v command ####
###################

record(stringin, "$(P)VERSION")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devmkspdr2000.proto getVersion $(port)")
    field(SDIS, "$(P)DISABLE")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VERSION")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

record(stringout, "$(P)SIM:VERSION")
{
}

###################
#### u command ####
###################

record(stringin, "$(P)UNITS")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devmkspdr2000.proto getUnits $(port)")
    field(SDIS, "$(P)DISABLE")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:UNITS")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

record(stringout, "$(P)SIM:UNITS")
{
}

###################
#### p command ####
###################

# The scales are received as 2 strings separated with a space
record(stringin, "$(P)RAW_PRES")
{
    field(DESC, "Raw pressure string from device")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devmkspdr2000.proto getPressures $(port)")
    field(FLNK, "$(P)FAN_PRES")
    field(SDIS, "$(P)DISABLE")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RAW_PRES")
    info(archive, "VAL")
}

record(stringout, "$(P)SIM:RAW_PRES")
{
}

record(fanout, "$(P)FAN_PRES")
{
	field(SCAN, "Passive")
    field(LNK1, "$(P)CALC_P1")
    field(LNK2, "$(P)CALC_P2")
}

# Get the substring before the first space
record(scalcout, "$(P)CALC_P1")
{
    field(DESC, "Takes substring before space")
    field(CALC, "AA[0,' ']")
    field(INAA, "$(P)RAW_PRES.SVAL")
    field(OUT, "$(P)PRES:1 PP MS")
}

record(stringin, "$(P)PRES:1")
{
    field(DESC, "Pressure reading, channel 1")
    field(DTYP, "Raw Soft Channel")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Get the substring after the first space
record(scalcout, "$(P)CALC_P2")
{
    field(DESC, "Takes substring after space")
    field(CALC, "AA[' ',-1]")
    field(INAA, "$(P)RAW_PRES.SVAL")
    field(OUT, "$(P)PRES:2 PP MS")
}

record(stringin, "$(P)PRES:2")
{
    field(DESC, "Pressure reading, channel 2")
    field(DTYP, "Raw Soft Channel")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

###################
#### f command ####
###################

# The scales are received as 2 strings separated with a space
record(stringin, "$(P)RAW_SCALES")
{
    field(DESC, "Raw scales string from device")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@devmkspdr2000.proto getScales $(port)")
    field(FLNK, "$(P)FAN_SCALES")
    field(SDIS, "$(P)DISABLE")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RAW_SCALES")
    info(archive, "VAL")
}

record(stringout, "$(P)SIM:RAW_SCALES")
{
}

record(fanout, "$(P)FAN_SCALES")
{
	field(SCAN, "Passive")
    field(LNK1, "$(P)CALC_S1")
    field(LNK2, "$(P)CALC_S2")
}

# Get the substring before the first space
record(scalcout, "$(P)CALC_S1")
{
    field(DESC, "Takes substring before space")
    field(CALC, "AA[0,' ']")
    field(INAA, "$(P)RAW_SCALES.SVAL")
    field(OUT, "$(P)SCALE:1 PP MS")
}

record(stringin, "$(P)SCALE:1")
{
    field(DESC, "Scale reading, channel 1")
    field(DTYP, "Raw Soft Channel")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# Get the substring after the first space
record(scalcout, "$(P)CALC_S2")
{
    field(DESC, "Takes substring after space")
    field(CALC, "AA[' ',-1]")
    field(INAA, "$(P)RAW_SCALES.SVAL")
    field(OUT, "$(P)SCALE:2 PP MS")
}

record(stringin, "$(P)SCALE:2")
{
    field(DESC, "Scale reading, channel 2")
    field(DTYP, "Raw Soft Channel")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}