record(bo, "$(P)DISABLE")
{
  field(DESC, "Disable comms")
  field(PINI, "YES")
  field(VAL, "$(DISABLE=0)")
  field(OMSL, "supervisory")
  field(ZNAM, "COMMS ENABLED")
  field(ONAM, "COMMS DISABLED")
  
  info(archive, "VAL")
}

record(bo, "$(P)DEBUG")
{
  field(DESC, "Debug mode")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Debug disabled")
  field(ONAM, "Debug enabled")
  
  info(archive, "VAL")
}

# Tell the magnetometer to process it's PVs and get new values from hardware
record(bo, "$(P)TRIGGER_MAGNETOMETER_READ") {
  field(FLNK, "$(MAGNETOMETER_TRIGGER).PROC CA")
}

# Processed from the magnetometer IOC when new readings are available
record(bo, "$(P)INPUTS_UPDATED") {
  field(FLNK, "$(P)MAGNETOMETER:X:_RAW")
}

record(bi, "$(P)MAGNETOMETER:OVERLOAD") {
  field(INP, "$(MAGNETOMETER_OVERLOAD) CA MSS")
  field(ZNAM, "In range")
  field(ONAM, "Out of range")
  
  field(FLNK, "$(P)_UPDATE_READINGS_READY")
}

record(calcout, "$(P)_UPDATE_READINGS_READY") {
  field(A, "1")
  field(CALC, "A")
  field(OUT, "$(P)_READINGS_READY PP")
}

record(bo, "$(P)_READINGS_READY") {
  field(VAL, "0")
}

record(mbbo, "$(P)STATEMACHINE:STATE") {
  field(DESC, "What the IOC is doing")
  
  field(ZRST, "initializing")  field(ZRSV, "MAJOR")
  field(ONST, "inputs_invalid")  field(ONSV, "MAJOR")
  field(TWST, "trigger_mag_read")
  field(THST, "wait_for_mag_read")
  field(FRST, "check_corrected_field")
  field(FVST, "check_raw_field")
  field(SXST, "check_auto_feedback")
  field(SVST, "check_output_psu_state")
  field(EIST, "write_to_psu")
  field(NIST, "loop_delay")
  
  # Do not archive unless needed for debugging - this PV changes very quickly
  # and would fill up the archive database on an instrument if logged all the
  # time.
  # info(archive, "VAL")
}

record(bo, "$(P)STATEMACHINE:ACTIVITY") {
  field(DESC, "Blinking if IOC is active")
}

record(ao, "$(P)STATEMACHINE:LOOP_TIME") {
  field(DESC, "Time between magnetometer readings")
  field(EGU, "ms")
  field(PREC, "0")
  
  field(HIHI, "1000")
  field(LOLO, "1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  field(ADEL, "5")  # Only log if changes by more than 5ms
  info(archive, "VAL")
}

record(ao, "$(P)STATEMACHINE:LOOP_DELAY")
{
  field(EGU, "ms")
  field(VAL, "100")
  field(PINI, "YES")
  field(PREC, "0")
}

record(bo, "$(P)STABLE") {
  field(DESC, "Stability of ZF system")
  field(ZNAM, "Unstable")
  field(ZSV, "MAJOR")
  field(ONAM, "Stable")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

record(bo, "$(P)AUTOFEEDBACK") {
  field(DESC, "Mode of ZF system")
  field(ZNAM, "Manual")
  field(ONAM, "Auto-feedback")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

alias("$(P)AUTOFEEDBACK", "$(P)AUTOFEEDBACK:SP")

record(ao, "$(P)TOLERANCE") {
  field(EGU, "mG")
  field(PREC, "5")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

record(mbbo, "$(P)STATUS") {
  field(DESC, "Status of ZF system")
  field(ZRST, "No error")
  field(ONST, "No new magnetometer data")
  field(ONSV, "MAJOR")
  field(TWST, "Magnetometer overloaded")
  field(TWSV, "MAJOR")
  field(THST, "Magnetometer data invalid")
  field(THSV, "MAJOR")
  field(FRST, "Power supply invalid")
  field(FRSV, "MAJOR")
  field(FVST, "Power supply on limits")
  field(FVSV, "MAJOR")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}


#
#
# Feedback factors
#
#

record(ao, "$(P)P:FEEDBACK") {
  field(DESC, "Proportional feedback factor")
  field(EGU, "")  # unitless
  field(PREC, "6")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

alias("$(P)P:FEEDBACK", "$(P)P:FEEDBACK:SP")
