record(bo, "$(P)SIM")
{
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(ZNAM, "NO")
  field(ONAM, "YES")
  field(VAL, "$(RECSIM=0)")
  field(PINI, "YES")
  
  info(archive, "VAL")
}

record(bo, "$(P)DISABLE")
{
  field(DESC, "Disable comms")
  field(PINI, "YES")
  field(VAL, "$(DISABLE=0)")
  field(OMSL, "supervisory")
  field(ZNAM, "COMMS ENABLED")
  field(ONAM, "COMMS DISABLED")
  
  info(archive, "VAL")
}

record(bo, "$(P)DEBUG")
{
  field(DESC, "Debug mode")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Debug disabled")
  field(ONAM, "Debug enabled")
  
  info(archive, "VAL")
}

#
#
# PVs for reading values from magnetometer
#
#

# Tell the magnetometer to process it's PVs and get new values from hardware
record(bo, "$(P)TRIGGER_MAGNETOMETER_READ") {
  field(FLNK, "$(MAGNETOMETER_TRIGGER).PROC CA")
}

# Processed from the magnetometer IOC when new readings are available
record(bo, "$(P)INPUTS_UPDATED") {
  field(FLNK, "$(P)MAGNETOMETER:X")
}

record(ai, "$(P)MAGNETOMETER:X") {
  field(INP, "$(MAGNETOMETER_X) CA MSS")
  field(EGU, "mG")
  field(PREC, "1")
  
  field(FLNK, "$(P)MAGNETOMETER:Y")
  
  info(archive, "VAL")
}

record(ai, "$(P)MAGNETOMETER:Y") {
  field(INP, "$(MAGNETOMETER_Y) CA MSS")
  field(EGU, "mG")
  field(PREC, "1")
  
  field(FLNK, "$(P)MAGNETOMETER:Z")
  
  info(archive, "VAL")
}

record(ai, "$(P)MAGNETOMETER:Z") {
  field(INP, "$(MAGNETOMETER_Z) CA MSS")
  field(EGU, "mG")
  field(PREC, "1")
  
  field(FLNK, "$(P)MAGNETOMETER:OVERLOAD")
  
  info(archive, "VAL")
}

record(bi, "$(P)MAGNETOMETER:OVERLOAD") {
  field(INP, "$(MAGNETOMETER_OVERLOAD) CA MSS")
  field(ZNAM, "In range")
  field(ONAM, "Out of range")
  
  field(FLNK, "$(P)_UPDATE_READINGS_READY")
}

record(calcout, "$(P)_UPDATE_READINGS_READY") {
  field(A, "1")
  field(CALC, "A")
  field(OUT, "$(P)_READINGS_READY PP")
}

record(bo, "$(P)_READINGS_READY") {
  field(VAL, "0")
}


#
#
# Statemachine status PVs
#
#


record(mbbo, "$(P)STATEMACHINE:STATE") {
  field(DESC, "What the IOC is doing")
  
  field(ZRST, "initializing")  field(ZRSV, "MAJOR")
  field(ONST, "inputs_invalid")  field(ONSV, "MAJOR")
  field(TWST, "trigger_mag_read")
  field(THST, "wait_for_mag_read")
  field(FRST, "check_corrected_field")
  field(FVST, "check_raw_field")
  field(SXST, "check_auto_feedback")
  field(SVST, "check_output_psu_state")
  field(EIST, "write_to_psu")
  field(NIST, "loop_delay")
  
  # Do not archive unless needed for debugging - this PV changes very quickly
  # and would fill up the archive database on an instrument if logged all the
  # time.
  # info(archive, "VAL")
}

record(bo, "$(P)STATEMACHINE:ACTIVITY") {
  field(DESC, "Blinking if IOC is active")
}

record(ao, "$(P)STATEMACHINE:LOOP_TIME") {
  field(DESC, "Time between magnetometer readings")
  field(EGU, "ms")
  field(PREC, "0")
  
  field(HIHI, "1000")
  field(LOLO, "1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  field(ADEL, "5")  # Only log if changes by more than 5ms
  info(archive, "VAL")
}

record(ao, "$(P)STATEMACHINE:LOOP_DELAY")
{
  field(EGU, "ms")
  field(VAL, "100")
  field(PINI, "YES")
  field(PREC, "0")
}

#
#
# User facing setpoints/readbacks of field
#
#

record(ao, "$(P)FIELD:X:SP") {
  field(DESC, "Field setpoint X")
  field(EGU, "mG")
  field(PREC, "1")
  
  info(archive, "VAL")
}

alias("$(P)MAGNETOMETER:X", "$(P)FIELD:X")

record(ao, "$(P)FIELD:Y:SP") {
  field(DESC, "Field setpoint Y")
  field(EGU, "mG")
  field(PREC, "1")
  
  info(archive, "VAL")
}

alias("$(P)MAGNETOMETER:Y", "$(P)FIELD:Y")

record(ao, "$(P)FIELD:Z:SP") {
  field(DESC, "Field setpoint Z")
  field(EGU, "mG")
  field(PREC, "1")
  
  info(archive, "VAL")
}

alias("$(P)MAGNETOMETER:Z", "$(P)FIELD:Z")

record(bo, "$(P)STABLE") {
  field(DESC, "Stability of ZF system")
  field(ZNAM, "Unstable")
  field(ZSV, "MAJOR")
  field(ONAM, "Stable")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

record(bo, "$(P)AUTOFEEDBACK") {
  field(DESC, "Mode of ZF system")
  field(ZNAM, "Manual")
  field(ONAM, "Auto-feedback")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

alias("$(P)AUTOFEEDBACK", "$(P)AUTOFEEDBACK:SP")

record(ao, "$(P)TOLERANCE") {
  field(EGU, "mG")
  field(PREC, "5")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

record(mbbo, "$(P)STATUS") {
  field(DESC, "Status of ZF system")
  field(ZRST, "No error")
  field(ONST, "Magnetometer read error")
  field(ONSV, "MAJOR")
  field(TWST, "Magnetometer overloaded")
  field(TWSV, "MAJOR")
  field(THST, "Magnetometer data invalid")
  field(THSV, "MAJOR")
  field(FRST, "Power supply invalid")
  field(FRSV, "MAJOR")
  field(FVST, "Power supply on limits")
  field(FVSV, "MAJOR")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}


#
#
# Feedback factors
#
#

record(ao, "$(P)P:X") {
  field(DESC, "Amps per mG - X axis")
  field(EGU, "A/mG")
  field(PREC, "6")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

alias("$(P)P:X", "$(P)P:X:SP")

record(ao, "$(P)P:Y") {
  field(DESC, "Amps per mG - Y axis")
  field(EGU, "A/mG")
  field(PREC, "6")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

alias("$(P)P:Y", "$(P)P:Y:SP")

record(ao, "$(P)P:Z") {
  field(DESC, "Amps per mG - Z axis")
  field(EGU, "A/mG")
  field(PREC, "6")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

alias("$(P)P:Z", "$(P)P:Z:SP")

record(ao, "$(P)P:FEEDBACK") {
  field(DESC, "Proportional feedback factor")
  field(EGU, "")  # unitless
  field(PREC, "6")
  
  info(interest, "HIGH")
  info(archive, "VAL")
}

alias("$(P)P:FEEDBACK", "$(P)P:FEEDBACK:SP")

#
#
# PVs corresponding to power supplies
#
#

record(ai, "$(P)OUTPUT:X") {
  field(EGU, "A")
  field(SCAN, ".1 second")
  field(INP, "$(PSU_X) CA MSS")
  field(PREC, "6")
  field(LOLO, "$(OUTPUT_X_MIN)")
  field(HIHI, "$(OUTPUT_X_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  info(interest, "MEDIUM")
  info(archive, "VAL")
}

record(ai, "$(P)OUTPUT:Y") {
  field(EGU, "A")
  field(SCAN, ".1 second")
  field(INP, "$(PSU_Y) CA MSS")
  field(PREC, "6")
  field(LOLO, "$(OUTPUT_Y_MIN)")
  field(HIHI, "$(OUTPUT_Y_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  info(interest, "MEDIUM")
  info(archive, "VAL")
}

record(ai, "$(P)OUTPUT:Z") {
  field(EGU, "A")
  field(SCAN, ".1 second")
  field(INP, "$(PSU_Z) CA MSS")
  field(PREC, "6")
  field(LOLO, "$(OUTPUT_Z_MIN)")
  field(HIHI, "$(OUTPUT_Z_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  info(interest, "MEDIUM")
  info(archive, "VAL")
}

record(ao, "$(P)OUTPUT:X:SP") {
  field(EGU, "A")
  field(DRVL, "$(OUTPUT_X_MIN)")
  field(DRVH, "$(OUTPUT_X_MAX)")
  field(LOLO, "$(OUTPUT_X_MIN)")
  field(HIHI, "$(OUTPUT_X_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(OUT, "$(PSU_X):SP CA PP")
  field(PREC, "6")
  
  info(archive, "VAL DRVL DRVH")
}

record(ao, "$(P)OUTPUT:Y:SP") {
  field(EGU, "A")
  field(DRVL, "$(OUTPUT_Y_MIN)")
  field(DRVH, "$(OUTPUT_Y_MAX)")
  field(LOLO, "$(OUTPUT_Y_MIN)")
  field(HIHI, "$(OUTPUT_Y_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(OUT, "$(PSU_Y):SP CA PP")
  field(PREC, "6")
  
  info(archive, "VAL DRVL DRVH")
}

record(ao, "$(P)OUTPUT:Z:SP") {
  field(EGU, "A")
  field(DRVL, "$(OUTPUT_Z_MIN)")
  field(DRVH, "$(OUTPUT_Z_MAX)")
  field(LOLO, "$(OUTPUT_Z_MIN)")
  field(HIHI, "$(OUTPUT_Z_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(OUT, "$(PSU_Z):SP CA PP")
  field(PREC, "6")
  
  info(archive, "VAL DRVL DRVH")
}

record(ai, "$(P)OUTPUT:X:SP:RBV") {
  field(EGU, "A")
  field(SCAN, ".1 second")
  field(INP, "$(PSU_X):SP:RBV CA MSS")
  field(PREC, "6")
  field(LOLO, "$(OUTPUT_X_MIN)")
  field(HIHI, "$(OUTPUT_X_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  info(archive, "VAL")
}

record(ai, "$(P)OUTPUT:Y:SP:RBV") {
  field(EGU, "A")
  field(SCAN, ".1 second")
  field(INP, "$(PSU_Y):SP:RBV CA MSS")
  field(PREC, "6")
  field(LOLO, "$(OUTPUT_Y_MIN)")
  field(HIHI, "$(OUTPUT_Y_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  info(archive, "VAL")
}

record(ai, "$(P)OUTPUT:Z:SP:RBV") {
  field(EGU, "A")
  field(SCAN, ".1 second")
  field(INP, "$(PSU_Z):SP:RBV CA MSS")
  field(PREC, "6")
  field(LOLO, "$(OUTPUT_Z_MIN)")
  field(HIHI, "$(OUTPUT_Z_MAX)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  
  info(archive, "VAL")
}

### Simulation records

record(ao, "$(P)SIM:MAGNETOMETER:X") {
  field(FLNK, "$(P)SIM:MAGNETOMETER:Y")
}
alias("$(P)SIM:MAGNETOMETER:X", "$(P)SIM:MAGNETOMETER:X:SP")

record(ao, "$(P)SIM:MAGNETOMETER:Y") {
  field(FLNK, "$(P)SIM:MAGNETOMETER:Z")
}
alias("$(P)SIM:MAGNETOMETER:Y", "$(P)SIM:MAGNETOMETER:Y:SP")

record(ao, "$(P)SIM:MAGNETOMETER:Z") {
  field(FLNK, "$(P)SIM:_INPUTS_UPDATED")
}
alias("$(P)SIM:MAGNETOMETER:Z", "$(P)SIM:MAGNETOMETER:Z:SP")

# Set this to 1 to simulate the magnetometer IOC not being present
record(bo, "$(P)SIM:MAGNETOMETER_DISCONNECTED") {}

record(calc, "$(P)SIM:_INPUTS_UPDATED_CALC") {
  field(INPA, "$(P)SIM:MAGNETOMETER_DISCONNECTED CP MS")
  field(CALC, "A+1")
}

# Tell the magnetometer to process it's PVs and get new values from hardware
record(fanout, "$(P)SIM:_INPUTS_UPDATED") {
  field(SELM, "Specified")
  field(SELL, "$(P)SIM:_INPUTS_UPDATED_CALC")
  
  # Triggered only if $(P)SIM:MAGNETOMETER_DISCONNECTED is False
  field(LNK1, "$(P)INPUTS_UPDATED")
}

record(bo, "$(P)SIM:MAGNETOMETER:OVERLOAD") {
  field(ZNAM, "In range")
  field(ONAM, "Out of range")
}
