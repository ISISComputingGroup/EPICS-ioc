record(bo, "$(P)SIM") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
}

record(bo, "$(P)DISABLE") 
{
  field(DESC, "Disable comms")
  field(PINI, "YES")
  field(VAL, "$(DISABLE=0)")
  field(OMSL, "supervisory")
  field(ZNAM, "COMMS ENABLED")
  field(ONAM, "COMMS DISABLED")
}


# Initially generated by $Id$
# 
# auto-generated EPICS records specify an asyn port "lvfp", but this can be changed - it just needs
# to match the first argument of the relevant lvDCOMConfigure() command in the IOC st.cmd 
# 
      
# 
# Definitions from configSection "frontpanel" in XML input file
#
#     lvDCOMConfigure("lvfp", "frontpanel", "/path/to/lvinput.xml")
# 
      
## Creating both stringout/stringin and waveform records for "Message" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "Message" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(stringin, "$(P)MESSAGE")
{
	field(DESC, "LabVIEW 'Message'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Message")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MESSAGE")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "Message" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(waveform, "$(P)MESSAGEWF")
{
	field(DESC, "LabVIEW 'Message'")
    field(DTYP, "asynOctetRead")
	field(FTVL, "CHAR")
	field(NELM, 256)
    field(INP,  "@asyn(lvfp,0,0)Message")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MESSAGE")
    field(SDIS, "$(P)DISABLE")
}

## Creating both stringout/stringin and waveform records for "Label 1" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "Label 1" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(stringin, "$(P)LABEL_1")
{
	field(DESC, "LabVIEW 'Label 1'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Label_1")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_1")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "Label 1" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(waveform, "$(P)LABEL_1WF")
{
	field(DESC, "LabVIEW 'Label 1'")
    field(DTYP, "asynOctetRead")
	field(FTVL, "CHAR")
	field(NELM, 256)
    field(INP,  "@asyn(lvfp,0,0)Label_1")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_1")
    field(SDIS, "$(P)DISABLE")
}

## Creating both stringout/stringin and waveform records for "Label 2" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "Label 2" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(stringin, "$(P)LABEL_2")
{
	field(DESC, "LabVIEW 'Label 2'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)LABEL_2")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_2")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "Label 2" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(waveform, "$(P)LABEL_2WF")
{
	field(DESC, "LabVIEW 'Label 2'")
    field(DTYP, "asynOctetRead")
	field(FTVL, "CHAR")
	field(NELM, 256)
    field(INP,  "@asyn(lvfp,0,0)Label_2")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_2")
    field(SDIS, "$(P)DISABLE")
}

## Creating both stringout/stringin and waveform records for "Label 3" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "Label 3" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(stringin, "$(P)LABEL_3")
{
	field(DESC, "LabVIEW 'Label 3'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Label_3")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_3")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "Label 3" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(waveform, "$(P)LABEL_3WF")
{
	field(DESC, "LabVIEW 'Label 3'")
    field(DTYP, "asynOctetRead")
	field(FTVL, "CHAR")
	field(NELM, 256)
    field(INP,  "@asyn(lvfp,0,0)Label_3")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_3")
    field(SDIS, "$(P)DISABLE")
}


## Creating both stringout/stringin and waveform records for "Label 4" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "Label 4" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(stringin, "$(P)LABEL_4")
{
	field(DESC, "LabVIEW 'Label 4'")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)Label_4")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_4")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "Label 4" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(waveform, "$(P)LABEL_4WF")
{
	field(DESC, "LabVIEW 'Label 4'")
    field(DTYP, "asynOctetRead")
	field(FTVL, "CHAR")
	field(NELM, 256)
    field(INP,  "@asyn(lvfp,0,0)Label_4")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LABEL_4")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "Setpoint 1" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)SETPOINT_1")
{
	field(DESC, "LabVIEW 'Setpoint 1'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Setpoint_1")
    field(PREC, "3")
    field(EGU,  "A")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_1")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

# Write to LabVIEW control "Setpoint 1" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ao, "$(P)SETPOINT_1:SP")
{
	field(DESC, "LabVIEW 'Setpoint 1'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Setpoint_1")
    field(PREC, "3")
    field(EGU,  "A")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_1:SP")
    field(SDIS, "$(P)DISABLE")
}


alias("$(P)SETPOINT_1:SP","$(P)SETPOINT_1:SP:RBV")


# Read LabVIEW control/indicator "Setpoint 2" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)SETPOINT_2")
{
	field(DESC, "LabVIEW 'Setpoint 2'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Setpoint_2")
    field(PREC, "3")
    field(EGU,  "A")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_2")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Write to LabVIEW control "Setpoint 2" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ao, "$(P)SETPOINT_2:SP")
{
	field(DESC, "LabVIEW 'Setpoint 2'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Setpoint_2")
    field(PREC, "3")
    field(EGU,  "A")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_2:SP")
    field(SDIS, "$(P)DISABLE")
}

alias("$(P)SETPOINT_2:SP","$(P)SETPOINT_2:SP:RBV")

# Read LabVIEW control/indicator "Setpoint 3" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)SETPOINT_3")
{
	field(DESC, "LabVIEW 'Setpoint 3'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Setpoint_3")
    field(PREC, "3")
    field(EGU,  "A")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_3")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

# Write to LabVIEW control "Setpoint 3" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ao, "$(P)SETPOINT_3:SP")
{
	field(DESC, "LabVIEW 'Setpoint 3'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Setpoint_3")
    field(PREC, "3")
    field(EGU,  "A")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_3:SP")
    field(SDIS, "$(P)DISABLE")
}

alias("$(P)SETPOINT_3:SP","$(P)SETPOINT_3:SP:RBV")

# Read LabVIEW control/indicator "Setpoint 4" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)SETPOINT_4")
{
	field(DESC, "LabVIEW 'Setpoint 4'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Setpoint_4")
    field(PREC, "3")
    field(EGU,  "%")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_4")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

# Write to LabVIEW control "Setpoint 4" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ao, "$(P)SETPOINT_4:SP")
{
	field(DESC, "LabVIEW 'Setpoint 4'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Setpoint_4")
    field(PREC, "3")
    field(EGU,  "%")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SETPOINT_4:SP")
    field(SDIS, "$(P)DISABLE")
}

alias("$(P)SETPOINT_4:SP","$(P)SETPOINT_4:SP:RBV")


# Read LabVIEW control/indicator "Current 1" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)CURRENT_1")
{
	field(DESC, "LabVIEW 'Current 1'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_1")
    field(PREC, "3")
    field(EGU,  "A")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT_1")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Read LabVIEW control/indicator "Current 2" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)CURRENT_2")
{
	field(DESC, "LabVIEW 'Current 2'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_2")
    field(PREC, "3")
    field(EGU,  "A")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT_2")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Read LabVIEW control/indicator "Current 3" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)CURRENT_3")
{
	field(DESC, "LabVIEW 'Current 3'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_3")
    field(PREC, "3")
    field(EGU,  "A")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT_3")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Read LabVIEW control/indicator "Current 4" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)CURRENT_4")
{
	field(DESC, "LabVIEW 'Current 4'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Current_4")
    field(PREC, "3")
    field(EGU,  "A")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT_4")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Read LabVIEW control/indicator "Voltage 1" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)VOLTAGE_1")
{
	field(DESC, "LabVIEW 'Voltage 1'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Voltage_1")
    field(PREC, "3")
    field(EGU,  "V")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE_1")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Read LabVIEW control/indicator "Voltage 2" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)VOLTAGE_2")
{
	field(DESC, "LabVIEW 'Voltage 2'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Voltage_2")
    field(PREC, "3")
    field(EGU,  "V")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE_2")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Read LabVIEW control/indicator "Voltage 3" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)VOLTAGE_3")
{
	field(DESC, "LabVIEW 'Voltage 3'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Voltage_3")
    field(PREC, "3")
    field(EGU,  "V")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE_3")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}


# Read LabVIEW control/indicator "Voltage 4" on "C:/LabVIEW Modules/Instruments/HIFI/MagnetsHIFI - Magnets - System - Front Panel.vi"
record(ai, "$(P)VOLTAGE_4")
{
	field(DESC, "LabVIEW 'Voltage 4'")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Voltage_4")
    field(PREC, "3")
    field(EGU,  "V")
    field(SCAN, "1 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE_4")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

# SIM RECORDS
record(stringin, "$(P)SIM:MESSAGE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:LABEL_1")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:LABEL_2")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:LABEL_3")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:LABEL_4")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:SETPOINT_1")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:SETPOINT_1","$(P)SIM:SETPOINT_1:SP")
alias("$(P)SIM:SETPOINT_1","$(P)SIM:SETPOINT_1:SP:RBV")

record(ai, "$(P)SIM:SETPOINT_2")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:SETPOINT_2","$(P)SIM:SETPOINT_2:SP")
alias("$(P)SIM:SETPOINT_2","$(P)SIM:SETPOINT_2:SP:RBV")

record(ai, "$(P)SIM:SETPOINT_3")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:SETPOINT_3","$(P)SIM:SETPOINT_3:SP")
alias("$(P)SIM:SETPOINT_3","$(P)SIM:SETPOINT_3:SP:RBV")

record(ai, "$(P)SIM:SETPOINT_4")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:SETPOINT_4","$(P)SIM:SETPOINT_4:SP")
alias("$(P)SIM:SETPOINT_4","$(P)SIM:SETPOINT_4:SP:RBV")

record(ai, "$(P)CURRENT_1")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)CURRENT_2")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)CURRENT_3")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)CURRENT_4")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)VOLTAGE_1")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)VOLTAGE_2")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)VOLTAGE_3")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)VOLTAGE_4")
{
    ield(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}