#!../../bin/windows-x64/GALIL-IOC-01
## You may have to change GALIL-IOC-01 to something else
## everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocGALIL-IOC-01")
epicsEnvSet("TOP","C:/Instrument/Apps/EPICS/ioc/master/GALIL")
epicsEnvSet("ASYN","C:/Instrument/Apps/EPICS/support/asyn/master")
epicsEnvSet("AUTOSAVE","C:/Instrument/Apps/EPICS/support/autosave/master")
epicsEnvSet("BUSY","C:/Instrument/Apps/EPICS/support/busy/master")
epicsEnvSet("CALC","C:/Instrument/Apps/EPICS/support/calc/master")
epicsEnvSet("MOTOR","C:/Instrument/Apps/EPICS/support/motor/master")
epicsEnvSet("MOTORSIM","C:/Instrument/Apps/EPICS/support/motor/master/modules/motorMotorSim")
epicsEnvSet("SSCAN","C:/Instrument/Apps/EPICS/support/sscan/master")
epicsEnvSet("GALIL","C:/Instrument/Apps/EPICS/support/galil/master")
epicsEnvSet("AXIS","C:/Instrument/Apps/EPICS/support/axis/master")
epicsEnvSet("MOTIONSETPOINTS","C:/Instrument/Apps/EPICS/support/motionSetPoints/master")
epicsEnvSet("SNCSEQ","C:/Instrument/Apps/EPICS/support/seq/master")
epicsEnvSet("CSM","C:/Instrument/Apps/EPICS/support/csm/master")
epicsEnvSet("SAMPLECHANGER","C:/Instrument/Apps/EPICS/support/sampleChanger/master")
epicsEnvSet("STD","C:/Instrument/Apps/EPICS/support/std/master")
epicsEnvSet("ACCESSSECURITY","C:/Instrument/Apps/EPICS/support/AccessSecurity/master")
epicsEnvSet("ASUBFUNCTIONS","C:/Instrument/Apps/EPICS/support/asubFunctions/master")
epicsEnvSet("CAPUTLOG","C:/Instrument/Apps/EPICS/support/caPutLog/master")
epicsEnvSet("DEVIOCSTATS","C:/Instrument/Apps/EPICS/support/devIocStats/master")
epicsEnvSet("ICPCONFIG","C:/Instrument/Apps/EPICS/support/icpconfig/master")
epicsEnvSet("MYSQL","C:/Instrument/Apps/EPICS/support/MySQL/master")
epicsEnvSet("PCRE","C:/Instrument/Apps/EPICS/support/pcre/master")
epicsEnvSet("PUGIXML","C:/Instrument/Apps/EPICS/support/pugixml/master")
epicsEnvSet("PVDUMP","C:/Instrument/Apps/EPICS/support/pvdump/master")
epicsEnvSet("UTILITIES","C:/Instrument/Apps/EPICS/support/utilities/master")
epicsEnvSet("TINYXML","C:/Instrument/Apps/EPICS/support/TinyXML/master")
epicsEnvSet("MOTOREXT","C:/Instrument/Apps/EPICS/support/motorExtensions/master")
epicsEnvSet("ONCRPC","C:/Instrument/Apps/EPICS/support/oncrpc/master")
epicsEnvSet("BARNDOORS","C:/Instrument/Apps/EPICS/support/barndoors/master")
epicsEnvSet("GEMORC","C:/Instrument/Apps/EPICS/support/gemorc/master")
epicsEnvSet("JAWS","C:/Instrument/Apps/EPICS/support/jaws/master")
epicsEnvSet("LIBJSON","C:/Instrument/Apps/EPICS/support/libjson/master")
epicsEnvSet("ROTSC","C:/Instrument/Apps/EPICS/support/rotating_sample_changer/master")
epicsEnvSet("SQLITE","C:/Instrument/Apps/EPICS/support/sqlite/master")
epicsEnvSet("ZLIB","C:/Instrument/Apps/EPICS/support/zlib/master")
epicsEnvSet("GALILIOC","C:/Instrument/Apps/EPICS/ioc/master/GALIL")
epicsEnvSet("EPICS_ROOT","C:/Instrument/Apps/EPICS")
epicsEnvSet("EPICS_BASE","C:/Instrument/Apps/EPICS/base/master")
epicsEnvSet("SUPPORT","C:/Instrument/Apps/EPICS/support")
epicsEnvSet("ISISSUPPORT","C:/Instrument/Apps/EPICS/ISIS")
epicsEnvSet("IOCSTARTUP","C:/Instrument/Apps/EPICS/iocstartup")
epicsEnvSet("ICPBINARYDIR","C:/Instrument/Apps/EPICS/ICP_Binaries")
cd C:/Instrument/Apps/EPICS/ioc/master/GALIL
## Register all support components
dbLoadDatabase "dbd/GALIL-IOC-01.dbd"
GALIL_IOC_01_registerRecordDeviceDriver pdbbase
cd C:/Instrument/Apps/EPICS/ioc/master/GALIL/iocBoot/iocGALIL-IOC-01
## uncomment to see every command sent to this galil, or define in st-common.cmd for every galil
#epicsEnvSet("GALIL_DEBUG_FILE", "galil1_debug.txt")
< st-common.cmd
##ISIS## Run IOC initialisation 
epicsEnvSet("IFIOC_GALIL_01", "#")
epicsEnvSet("IFIOC_GALIL_02", "#")
epicsEnvSet("IFIOC_GALIL_03", "#")
epicsEnvSet("IFIOC_GALIL_04", "#")
epicsEnvSet("IFIOC_GALIL_05", "#")
epicsEnvSet("IFIOC_GALIL_06", "#")
epicsEnvSet("IFIOC_GALIL_07", "#")
epicsEnvSet("IFIOC_GALIL_08", "#")
epicsEnvSet("IFIOC_GALIL_09", "#")
epicsEnvSet("IFIOC_GALIL_10", "#")
## these are used in local instrument galil.cmd during transition to new driver
## additions can use    $(IFNEWGALIL=#)
epicsEnvSet("IFNEWGALIL", " ")
epicsEnvSet("IFNOTNEWGALIL", "#")
< C:/Instrument/Apps/EPICS/iocstartup/init.cmd
icpconfigLoad
icpconfigLoad: ioc "GALIL_01" group "GALIL" options 0x0 host "NDLT1542"
icpconfigLoad: config base (ICPCONFIGBASE) is "C:/Instrument/Settings/config"
icpconfigLoad: config root (ICPCONFIGROOT) is "C:/Instrument/Settings/config/NDLT1542/configurations"
icpconfigLoad: * $(SIMULATE)="0" ({initial default})
icpconfigLoad: * $(IFSIM)="#" ({initial default})
icpconfigLoad: * $(IFNOTSIM)=" " ({initial default})
icpconfigLoad: * $(SIMSFX)="" ({initial default})
icpconfigLoad: * $(DISABLE)="0" ({initial default})
icpconfigLoad: * $(IFDISABLE)="#" ({initial default})
icpconfigLoad: * $(IFNOTDISABLE)=" " ({initial default})
icpconfigLoad: * $(DEVSIM)="0" ({initial default})
icpconfigLoad: * $(IFDEVSIM)="#" ({initial default})
icpconfigLoad: * $(IFNOTDEVSIM)=" " ({initial default})
icpconfigLoad: * $(RECSIM)="0" ({initial default})
icpconfigLoad: * $(IFRECSIM)="#" ({initial default})
icpconfigLoad: * $(IFNOTRECSIM)=" " ({initial default})
icpconfigLoad: * $(ICPCONFIGDIR)="C:/Instrument/Settings/config/NDLT1542/configurations/configurations/LET_CCR" ({initial default})
icpconfigLoad: last configuration was "LET_CCR" (C:/Instrument/Settings/config/NDLT1542/configurations/configurations/LET_CCR)
icpconfigLoad: configuration "LET_CCR"
icpconfigLoad: loading 4 component(s) for "/configurations/LET_CCR"
icpconfigLoad: component "LET_Eurotherms"
icpconfigLoad: Loading default macros for "/components/LET_Eurotherms"
icpconfigLoad: Loading IOC sim level "/components/LET_Eurotherms"
icpconfigLoad: Loading IOC macros for "/components/LET_Eurotherms"
icpconfigLoad: Loading IOC PVs for "/components/LET_Eurotherms"
icpconfigLoad: Loading IOC PV sets for "/components/LET_Eurotherms"
icpconfigLoad: Found 0 files for "/components/LET_Eurotherms"
icpconfigLoad: component "LET_Rotation_Orange"
icpconfigLoad: Loading default macros for "/components/LET_Rotation_Orange"
icpconfigLoad: Loading IOC sim level "/components/LET_Rotation_Orange"
icpconfigLoad: Loading IOC macros for "/components/LET_Rotation_Orange"
icpconfigLoad: Loading IOC PVs for "/components/LET_Rotation_Orange"
icpconfigLoad: Loading IOC PV sets for "/components/LET_Rotation_Orange"
icpconfigLoad: Found 0 files for "/components/LET_Rotation_Orange"
icpconfigLoad: component "LET_Base"
icpconfigLoad: Loading default macros for "/components/LET_Base"
icpconfigLoad: Loading IOC sim level "/components/LET_Base"
icpconfigLoad: Loading IOC macros for "/components/LET_Base"
icpconfigLoad: Loading IOC PVs for "/components/LET_Base"
icpconfigLoad: Loading IOC PV sets for "/components/LET_Base"
icpconfigLoad: Found 0 files for "/components/LET_Base"
icpconfigLoad: component "LET_Collimator"
icpconfigLoad: Loading default macros for "/components/LET_Collimator"
icpconfigLoad: Loading IOC sim level "/components/LET_Collimator"
icpconfigLoad:   $(DEVSIM)="0" (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(IFDEVSIM)="#" (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(IFNOTDEVSIM)=" " (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(RECSIM)="0" (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(IFRECSIM)="#" (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(IFNOTRECSIM)=" " (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(DISABLE)="0" (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(IFDISABLE)="#" (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad:   $(IFNOTDISABLE)=" " (/components/LET_Collimator) [previous ({initial default})]
icpconfigLoad: Loading IOC macros for "/components/LET_Collimator"
icpconfigLoad: * $(MTRCTRL)="1" (/components/LET_Collimator)
icpconfigLoad: * $(GALILADDR)="" (/components/LET_Collimator)
icpconfigLoad: * $(ENCAVNSAMP)="" (/components/LET_Collimator)
icpconfigLoad: Loading IOC PVs for "/components/LET_Collimator"
icpconfigLoad: Loading IOC PV sets for "/components/LET_Collimator"
icpconfigLoad: Found 0 files for "/components/LET_Collimator"
icpconfigLoad: Loading default macros for "/configurations/LET_CCR"
icpconfigLoad: Loading IOC sim level "/configurations/LET_CCR"
icpconfigLoad: Loading IOC macros for "/configurations/LET_CCR"
icpconfigLoad: Loading IOC PVs for "/configurations/LET_CCR"
icpconfigLoad: Loading IOC PV sets for "/configurations/LET_CCR"
icpconfigLoad: Found 0 files for "/configurations/LET_CCR"
icpconfigLoad: loading old macro file "C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt"
icpconfigLoad:   $(SIMULATE)="0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt) [previous ({initial default})]
icpconfigLoad:   $(IFSIM)="#" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt) [previous ({initial default})]
icpconfigLoad:   $(IFNOTSIM)=" " (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt) [previous ({initial default})]
icpconfigLoad:   $(SIMSFX)="" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt) [previous ({initial default})]
icpconfigLoad: * $(GALILNUMCRATES)="1" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(GALIL_01__GALILADDR)="COM21 115200" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(GALILADDR)="COM21 115200" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt) [previous "" (/components/LET_Collimator)]
icpconfigLoad: * $(GALIL_01__MTRCTRL)="01" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(MTRCTRL)="01" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt) [previous "1" (/components/LET_Collimator)]
icpconfigLoad: * $(ISISDAE_01__DAEDCOM)="1" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(ISISDAE_01__DAEHOST)="localhost" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(ISISDAE_01__ISISDAE_MAX_NTC)="65000" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(ISISDAE_01__EPICS_CA_MAX_ARRAY_BYTES)="1500000" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_01__IPADDR)="192.168.1.83" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_01__NAME)="CHOPPER1_DISK1" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_01__OPEN)="42.7" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_01__CLOSED)="10.0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_02__IPADDR)="192.168.1.84" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_02__NAME)="CHOPPER1_DISK2" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_02__OPEN)="3.9" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_02__CLOSED)="30.0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_03__IPADDR)="192.168.1.81" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_03__NAME)="CHOPPER3" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_03__OPEN)="0.0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_03__CLOSED)="307.8" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_04__IPADDR)="192.168.1.82" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_04__NAME)="CHOPPER4" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_04__OPEN)="0.0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_04__CLOSED)="326.0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_05__IPADDR)="192.168.1.85" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_05__NAME)="CHOPPER5_DISK1" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_05__OPEN)="169.5" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_05__CLOSED)="205.0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_06__IPADDR)="192.168.1.86" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_06__NAME)="CHOPPER5_DISK2" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_06__OPEN)="107.5" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SKFCHOPPER_06__CLOSED)="143.0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SDTEST_01__SCAN1)="1 second" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SDTEST_01__GETOUT1)="KRDG? 0" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(SDTEST_01__GETIN1)="%e" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(TRITON_01__RAMP_FILE_NAME)="TRITON_01.txt" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(TRITON_01__USE_RAMP_FILE)="1" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(MEZFLIPR_01__PROTOCOL_VERSION)="2" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(MEZFLIPR_01__POLARISERPRESENT)="yes" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(MEZFLIPR_01__ANALYSERPRESENT)="no" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(CCD100_01__PORT)="COM28" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(CCD100_01__ADDRESS)="a" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: * $(CCD100_01__STOP)="1" (C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt)
icpconfigLoad: loaded 45 macros from old macro file "C:/Instrument/Settings/config/NDLT1542/configurations/globals.txt" (2 ioc, 0 group)
# define a macro with the same name as the IOC name and a blank value. This means we can use a line like
#  $(IFIOC_GALIL_01=#) to have something that is only executed in GALIL_01 IOC
# and you can pass to db file via A=1,$(IFIOC)= ,A=2
# used when loading motorUtils and motors moving
epicsEnvSet("IFIOC", "IFIOC_GALIL_01")
epicsEnvSet("IFIOC_GALIL_01", " ")
< C:/Instrument/Apps/EPICS/iocstartup/asyn.cmd
## defaults for asyn drivers
## Global default is to trace only errors
## 0=none,0x1=err,0x2=IO_device,0x4=IO_filter,0x8=IO_driver,0x10=flow,0x20=warning
asynSetTraceMask("", -1, 0x1)
## Global default to send trace output to errlog (missing 3rd arg passes NULL as that parameter)
asynSetTraceFile("", -1)
## Global default is to print escaped ascii for any IO_* trace specified above
## 0=none,1=ascii,2=esc,4=hex
asynSetTraceIOMask("", -1, 0x2)
< C:/Instrument/Apps/EPICS/iocstartup/ioctesting.cmd
# If in test dev sim mode set up values
stringiftest("TESTDEVSIM", "", 2)
# epicsEnvSet "DEVSIM" "1"
# epicsEnvSet "RECSIM" "0"
# epicsEnvSet "NOSIM" "0"
# stringiftest("DEVSIM", "yes", 2)
# stringiftest("RECSIM", "", 2)
# stringiftest("NOSIM", "", 2)
# If in test rec sim mode
stringiftest("TESTRECSIM", "", 2)
# epicsEnvSet "DEVSIM" "0"
# epicsEnvSet "RECSIM" "1"
# epicsEnvSet "NOSIM" "0"
# stringiftest("DEVSIM", "", 2)
# stringiftest("RECSIM", "yes", 2)
# stringiftest("NOSIM", "", 2)
# If in test no sim mode
stringiftest("TESTNOSIM", "", 2)
# epicsEnvSet "DEVSIM" "0"
# epicsEnvSet "RECSIM" "0"
# epicsEnvSet "NOSIM" "1"
# stringiftest("DEVSIM", "", 2)
# stringiftest("RECSIM", "", 2)
# stringiftest("NOSIM", "yes", 2)
## Create the emulator port macro and set it to either the one given or a spare port:
# freeIPPort(SPARE_PORT)
# epicsEnvSet "EMULATOR_PORT" 
# epicsEnvShow("EMULATOR_PORT") 
## For tests for older devices (e.g. galils) that were not built with devsim in mind 
## we need to enable the following macros.
# epicsEnvSet SIMULATE "1"
# epicsEnvSet IFSIM " "
# epicsEnvSet IFNOTSIM "#"
# epicsEnvSet SIMSFX "_DEVSIM"
# epicsEnvSet SIMULATE "1"
# epicsEnvSet IFSIM " "
# epicsEnvSet IFNOTSIM "#"
# epicsEnvSet SIMSFX "_RECSIM"
# epicsEnvSet SIMULATE "0"
# epicsEnvSet IFSIM "#"
# epicsEnvSet IFNOTSIM " "
# epicsEnvSet SIMSFX "_NOSIM"
## whether to use autosaved SP for jaws on IOC restart
stringiftest("INIT_JAWS_FROM_AS", "N", 5, "Y")
iocstringtest: expanded expression="N"
iocstringiftest: setting IFINIT_JAWS_FROM_AS="#"
iocstringiftest: setting IFNOTINIT_JAWS_FROM_AS=" "
#epicsThreadSleep(30)
##ISIS## Load common DB records 
< C:/Instrument/Apps/EPICS/iocstartup/dbload.cmd
#dbLoadRecords("$(TIMESTAMPRECORD)/db/timestamp.db","P=$(MYPVPREFIX)$(IOCNAME):")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/devIocStats/master/db/iocAdminSoft.db","IOC=TE:NDLT1542:CS:IOC:GALIL_01:DEVIOS")
#dbLoadRecords("$(ASUBFUNCTIONS)/db/iocExit.db","P=$(MYPVPREFIX),Q=CS:IOC:$(IOCNAME):,IOCNAME=$(IOCNAME)")
< C:/Instrument/Apps/EPICS/iocstartup/autosave.cmd
## start autosave.cmd
save_restoreSet_Debug(0)
# status-PV prefix, so save_restore can find its status PV's.
#epicsEnvSet("ASPREFIX","$(MYPVPREFIX)CS:IOC:$(IOCNAME):AS:")
epicsEnvSet("ASPREFIX","TE:NDLT1542:AS:GALIL_01:")
save_restoreSet_status_prefix("TE:NDLT1542:AS:GALIL_01:")
# Ok to save/restore save sets with missing values (no CA connection to PV)?  
save_restoreSet_IncompleteSetsOk(1)
# Save dated backup files?
save_restoreSet_DatedBackupFiles(1)
# Number of sequenced backup files to write
save_restoreSet_NumSeqFiles(1)
# Time interval between sequenced backups
save_restoreSet_SeqPeriodInSeconds(300)
# specify where save files should be - use a different directory if in simulation mode
mkdir("C:/Instrument/Var/autosave/GALIL_01") 
set_savefile_path("C:/Instrument/Var/autosave", "GALIL_01")
## specify what save files should be restored.  Note these files must be
## in the directory specified in set_savefile_path(), or, if that function
## has not been called, from the directory current when iocInit is invoked
## example: set_pass0_restoreFile("autosave_geiger.sav")
## restore positions at pass 0 so not passed to hardware
##
## Use     epicsEnvSet("AUTOSAVEREQ","#")   if you do not have any req files to load
 set_pass0_restoreFile("GALIL_01_positions.sav")
 set_pass0_restoreFile("GALIL_01_settings.sav")
# restore settings at pass 1 so passed to hardware
 set_pass1_restoreFile("GALIL_01_settings.sav")
# these values are obtained from info fields in DB files via makeAutosaveFiles() / makeAutosaveFileFromDbInfo()
set_pass0_restoreFile("GALIL_01_info_positions.sav")
set_pass0_restoreFile("GALIL_01_info_settings.sav")
set_pass1_restoreFile("GALIL_01_info_settings.sav")
#save_restoreSet_CAReconnect(1)
# specify directories in which to to search for included request files
set_requestfile_path("C:/Instrument/Apps/EPICS/ioc/master/GALIL/iocBoot/iocGALIL-IOC-01", "")
set_requestfile_path("C:/Instrument/Apps/EPICS/support/autosave/master/asApp/Db", "")
# Autosave status PVs - P must be same as used in save_restoreSet_status_prefix() above
dbLoadRecords("C:/Instrument/Apps/EPICS/support/autosave/master/asApp/Db/save_restoreStatus.db", "P=TE:NDLT1542:AS:GALIL_01:")
## end autosave.cmd
## override address in simulation mode - used in galil1.cmd etc, but we should not now be loading this
# epicsEnvSet("GALILADDR", "127.0.0.1")
# epicsEnvSet("GALILADDR", "127.0.0.1")
### Scan-support software
# crate-resident scan.  This executes 1D, 2D, 3D, and 4D scans, and caches
# 1D data, but it doesn't store anything to disk.  (See 'saveData' below for that.)
#dbLoadRecords("$(SSCAN)/sscanApp/Db/standardScans.db","P=$(MYPVPREFIX)$(IOCNAME):,MAXPTS1=8000,MAXPTS2=1000,MAXPTS3=10,MAXPTS4=10,MAXPTSH=8000")
#dbLoadRecords("$(SSCAN)/sscanApp/Db/saveData.db","P=$(MYPVPREFIX)$(IOCNAME):")
### autosave
# specify additional directories in which to to search for included request files
set_requestfile_path("C:/Instrument/Apps/EPICS/support/galil/master/GalilSup/Db", "")
set_requestfile_path("C:/Instrument/Apps/EPICS/support/motor/master/motorApp/Db", "")
set_requestfile_path("C:/Instrument/Apps/EPICS/support/sscan/master/sscanApp/Db", "")
## as all Galils cd to GALIL-IOC-01 need to add this explicitly so info generated req files are found
set_requestfile_path("C:/Instrument/Apps/EPICS/ioc/master/GALIL/iocBoot/iocGALIL-IOC-01", "")
## Make sure controller number is 2 digits long
calc("MTRCTRL", "01", 2, 2)
epicsEnvSet("GALILCONFIG","C:/Instrument/Settings/config/NDLT1542/configurations/galil")
## uncomment to see every command sent to every galil, of define in st.cmd for just one galil
#epicsEnvSet("GALIL_DEBUG_FILE", "galil_debug.txt")
## GALIL_MTR_PORT is the asyn port used to load just the motor record, other records 
## are loaded with "Galil" as the asyn port
# epicsEnvSet("GALIL_MTR_PORT", "GalilSim")
# epicsEnvSet("GALIL_MTR_PORT", "GalilSim")
    epicsEnvSet("GALIL_MTR_PORT", "Galil")
## load the galil db files
< galildb.cmd
## MTRCTRL set prior to call
## MTRCTRL is the galil crate number - 01, 02, ...
## GALIL_MTR_PORT will be Galil or GalilSim
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_motors.db", "GPORT=Galil,P=TE:NDLT1542:MOT:,CCP=01")
#Load DMC controller features (eg.  Limit switch type, home switch type, output compare, message consoles)
#Load extra functionality, untop of motorRecord features for axis/motors (eg. runtime gear ratio changes between master & slaves)
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_dmc_ctrl.db", "P=TE:NDLT1542:MOT:,CCP=01")
#Load extra features for real axis/motors (eg. Motor type, encoder type)
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_motor_extras.db", "P=TE:NDLT1542:MOT:,CCP=01,PVPREFIX=TE:NDLT1542:,ASG01=DEFAULT,ASG02=DEFAULT,ASG03=DEFAULT,ASG04=DEFAULT,ASG05=DEFAULT,ASG06=DEFAULT,ASG07=DEFAULT,ASG08=DEFAULT,ENCAVNSAMP=10,IOCNAME=GALIL_01")
#Load extra features for CS axis/motors (eg. Setpoint monitor)
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_csmotor_extras.db", "P=TE:NDLT1542:MOT:,CCP=01")
#Load kinematics for CS axis/motors (eg. Forward and reverse kinematics, kinematic variables)
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_csmotor_kinematics.db", "P=TE:NDLT1542:MOT:,CCP=01")
#Load coordinate system features (eg. Coordinate system S and T status, motor list, segments processed, moving status)
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_coordinate_systems.db", "P=TE:NDLT1542:MOT:,CCP=01")
#Load digital IO databases
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_digital_ports.db", "P=TE:NDLT1542:MOT:,CCP=01,RECSIM=0, IFNOTSIM= ")
#Load analog IO databases
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_analog_ports.db", "P=TE:NDLT1542:MOT:,CCP=01")
#Load user defined functions
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_userdef_records8.db", "P=TE:NDLT1542:MOT:,CCP=01")
#load user arrays
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_user_array.db","P=TE:NDLT1542:MOT:,CCP=01")
#Load profiles
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_profileMoveController.db", "P=TE:NDLT1542:MOT:,CCP=01")
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_profileMoveAxis.db", "P=TE:NDLT1542:MOT:,CCP=01")
#Load homing routine records 
dbLoadRecords("C:/Instrument/Apps/EPICS/ioc/master/GALIL/db/galil_homing_routine_names.db", "P=TE:NDLT1542:MOT:,M=01")
## motor util package
dbLoadRecords("C:/Instrument/Apps/EPICS/support/motor/master/db/motorUtil.db","P=TE:NDLT1542:GALIL_01:,IFIOC_GALIL_01= ,PVPREFIX=TE:NDLT1542:")
## per controller PVs
dbLoadRecords("C:/Instrument/Apps/EPICS/support/motor/master/db/motorController.db","P=TE:NDLT1542:,Q=MOT:MTR01:")
stringiftest("MOTORCONFIG", "", 0, 0)
# dbLoadRecords("C:/Instrument/Apps/EPICS/support/autosave/master/asApp/Db/configMenu.db","P=TE:NDLT1542:GALIL_01:CONFIG:,CONFIG=")
## create simulated motor if required (asyn port "GalilSim")
# < motorsim.cmd
# < motorsim.cmd
## configure the galil, if we are simulated this will not be used to drive the 
## actual device, but creating this asyn port at least allows record initialisation 
## to complete
    < C:/Instrument/Settings/config/NDLT1542/configurations/galil/galil01.cmd
## configure galil crate 1
GalilCreateController("Galil", "COM21 115200", 20, 1)
GalilCreateAxis("Galil","A",0,"",1)
GalilCreateAxis("Galil","B",0,"",1)
GalilCreateAxis("Galil","C",0,"",1)
GalilCreateAxis("Galil","D",0,"",1)
GalilCreateAxis("Galil","E",0,"",1)
GalilCreateAxis("Galil","F",0,"",1)
GalilCreateAxis("Galil","G",0,"",1)
GalilCreateAxis("Galil","H",0,"",1)
GalilStartController("Galil","C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Default_Header.gmc;C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc;C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Default_Footer.gmc!C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Oscillating_Collimator.gmc",0,0,5)
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
C:/Instrument/Apps/EPICS/support/galil/master/gmc/galil_Home_Dummy_Do_Nothing.gmc
## load the generic ISIS axis db for each axis
iocshCmdLoop("< st-axis.cmd", "MN=\$(I)", "I", 1, 8)
--> (1) iocshCmd("< st-axis.cmd") with: MN=1,I=1
epicsEnvSet("AMOTORNAME", "MTR0101")
epicsEnvSet("AMOTORPV", "MOT:MTR0101")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS1,mAXIS=MOT:MTR0101")
--> (2) iocshCmd("< st-axis.cmd") with: MN=2,I=2
epicsEnvSet("AMOTORNAME", "MTR0102")
epicsEnvSet("AMOTORPV", "MOT:MTR0102")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS2,mAXIS=MOT:MTR0102")
--> (3) iocshCmd("< st-axis.cmd") with: MN=3,I=3
epicsEnvSet("AMOTORNAME", "MTR0103")
epicsEnvSet("AMOTORPV", "MOT:MTR0103")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS3,mAXIS=MOT:MTR0103")
--> (4) iocshCmd("< st-axis.cmd") with: MN=4,I=4
epicsEnvSet("AMOTORNAME", "MTR0104")
epicsEnvSet("AMOTORPV", "MOT:MTR0104")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS4,mAXIS=MOT:MTR0104")
--> (5) iocshCmd("< st-axis.cmd") with: MN=5,I=5
epicsEnvSet("AMOTORNAME", "MTR0105")
epicsEnvSet("AMOTORPV", "MOT:MTR0105")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS5,mAXIS=MOT:MTR0105")
--> (6) iocshCmd("< st-axis.cmd") with: MN=6,I=6
epicsEnvSet("AMOTORNAME", "MTR0106")
epicsEnvSet("AMOTORPV", "MOT:MTR0106")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS6,mAXIS=MOT:MTR0106")
--> (7) iocshCmd("< st-axis.cmd") with: MN=7,I=7
epicsEnvSet("AMOTORNAME", "MTR0107")
epicsEnvSet("AMOTORPV", "MOT:MTR0107")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS7,mAXIS=MOT:MTR0107")
--> (8) iocshCmd("< st-axis.cmd") with: MN=8,I=8
epicsEnvSet("AMOTORNAME", "MTR0108")
epicsEnvSet("AMOTORPV", "MOT:MTR0108")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/axis/master/db/axis.db", "P=TE:NDLT1542:,AXIS=GALIL_01:AXIS8,mAXIS=MOT:MTR0108")
## configure jaws
< C:/Instrument/Settings/config/NDLT1542/configurations/galil/jaws.cmd
## configure barndoors
< C:/Instrument/Settings/config/NDLT1542/configurations/galil/barndoors.cmd
## configure axes
< C:/Instrument/Settings/config/NDLT1542/configurations/galil/axes.cmd
## motion set points
< C:/Instrument/Settings/config/NDLT1542/configurations/galil/motionsetpoints.cmd
## sample changer
< C:/Instrument/Settings/config/NDLT1542/configurations/galil/sampleChanger.cmd
# motor extensions
< C:/Instrument/Settings/config/NDLT1542/configurations/galil/motorExtensions.cmd
############ Motor Extensions ##############
# Create a soft motor record on top of a normal motor record which allow the gap to be set for the motor
# Copy this file to C:\Instrument\Settings\config\<machine>\configurations\galil
< C:/Instrument/Settings/config/NDLT1542/configurations/galil/oscillatingCollimator.cmd
############ Oscillating Collimator ############
epicsEnvSet "CONTROLLER_NUMBER" "1"
epicsEnvSet "MOTOR_NUMBER" "5"
epicsEnvSet "COLLIMATOR_PV_PREFIX" "OSCCOL"
calc("CNUM_PADDED", "1", 2, 2)
calc("MNUM_PADDED", "5", 2, 2)
# epicsEnvSet "OTYP" "Soft Channel"
dbLoadRecords("C:/Instrument/Apps/EPICS/support/motorExtensions/master/db/oscillatingCollimator.db", "P=TE:NDLT1542:MOT:, O=OSCCOL, M=MTR0105, D=DMC01, AXIS=5, OTYP=asynFloat64,RADIUS=284.0")
dbLoadRecords("C:/Instrument/Apps/EPICS/support/motorExtensions/master/db/oscillatingCollimator_Let.db", "P=TE:NDLT1542:MOT:, O=OSCCOL, M=MTR0105, D=DMC01, AXIS=5, OTYP=asynFloat64")\n
##ISIS## Stuff that needs to be done after all records are loaded but before iocInit is called 
< C:/Instrument/Apps/EPICS/iocstartup/preiocinit.cmd
#
# write process variable and IOC startup information to database 
#
pvdump
pvdump: ioc name is "GALIL_01" pid 25108
pvdump: MySQL setup took 0.144 seconds
#
# set up IOC access security
#
asSetFilename("C:/Instrument/Apps/EPICS/support/AccessSecurity/master/default.acf")
asSetSubstitutions("P=TE:NDLT1542:,ACF_IH1=localhost,ACF_IH2=localhost,ACF_IH3=localhost,ACF_IH4=localhost,")
#
# log to server address EPICS_IOC_LOG_INET listening on port EPICS_IOC_LOG_PORT
#
    epicsEnvSet("EPICS_IOC_LOG_INET", "localhost")
    iocLogInit()
## trace mask: 0x1=trace_error,0x2=traceio_device,0x4=traceio_filter, 0x8=traceio_driver, 0x10=trace_flow, 0x20=trace_warning  
#asynSetTraceMask("Galil",-1,0x39)
#asynSetTraceFile("Galil",-1,"galil.trace")
#asynSetTraceIOMask("Galil",-1,0x2)
iocInit()
############################################################################
## EPICS R7.0.3.1
## EPICS Base built Jan  2 2023
############################################################################
icpconfigLoad: setPVValuesStatic setting 0 pvs (pre iocInit)
icpconfigLoad: setPVValues setting 0 pvs (post iocInit)
## motor util package
#var motorUtil_debug 1
motorUtilInit("TE:NDLT1542:GALIL_01:")
##ISIS## Stuff that needs to be done after iocInit is called e.g. sequence programs 
< C:/Instrument/Apps/EPICS/iocstartup/postiocinit.cmd
# enable caPutLog to logger on localhost
# pass 0 to log value changes, pass 1 to log all puts, 2 logs all puts with no filtering on same PV
caPutLogInit "localhost" "1"
# var caPutLogToConsole 1
# var caPutLogToConsole 1
# var caPutLogToConsole 1
# Handle autosave 'commands' contained in loaded databases.
# file naming needs to agree with autosave.cmd
makeAutosaveFileFromDbInfo("GALIL_01_info_settings","autosaveFields")
makeAutosaveFileFromDbInfo("GALIL_01_info_positions","autosaveFields_pass0")
create_monitor_set("GALIL_01_info_positions.req", 5, "")
create_monitor_set("GALIL_01_info_settings.req", 30, "")
stringiftest("HASMTRCTRL", "01", 0, 0)
# errlogSev(2, "MTRCTRL has not been set")
# Save motor positions every 5 seconds - these could be used for restore on controller reset, but req file contents currently disable this
      create_monitor_set("GALIL_01_positions.req", 5, "P=TE:NDLT1542:MOT:,CCP=01")
# Save motor positions every 5 seconds, these are not used for automatic restore, they are just for information
# They could be manually applied for a restore, or used with autosave asVerify to check current positions  
      create_monitor_set("GALIL_01_positions_norestore.req", 5, "P=TE:NDLT1542:MOT:,CCP=01")
# Save motor settings every 30 seconds
      create_monitor_set("GALIL_01_settings.req", 30, "P=TE:NDLT1542:MOT:,CCP=01")
  # create_manual_set("Menu.req","P=TE:NDLT1542:MOT:,CMP=TE:NDLT1542:GALIL_01:CONFIG:,CONFIG=,IOCNAME=GALIL_01,MTRCTRL=01,CONFIGMENU=1")
# Initialize saveData for step scans
#saveData_Init("saveData.req", "P=$(MYPVPREFIX)$(IOCNAME):")
## Start any sequence programs
#seq sncxxx,"user=icsHost"
#asynSetTraceIOMask("GALILSYNC0", -1, 0x2)
#asynSetTraceMask("GALILSYNC0", -1, 0x9)
## if using hardware flow control on GALIL will need this
## do not enable software flow control - see comments in GalilController.cpp
#asynSetOption("GALILSYNC0", 0, "crtscts", "Y");
epics> 