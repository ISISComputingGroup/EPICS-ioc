# $File: //ASP/Dev/SBS/4_Controls/4_3_Network_Infrastructure/4_3_1_Comms_Common_Services/sw/device_drivers/Galil/1-5/galilTestApp/Db/galil_motor_extras.substitutions $
# $Revision: #3 $
# $DateTime: 2012/03/22 09:46:31 $
# $Author: cliftm $
#
# Description
# Substitution file for readback/commands that are in addition to features provided by motorRecord
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# Licence as published by the Free Software Foundation; either
# version 2.1 of the Licence, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public Licence for more details.
#
# You should have received a copy of the GNU Lesser General Public
# Licence along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
# 
# Contact details:
# mark.clift@synchrotron.org.au
# 800 Blackburn Road, Clayton, Victoria 3168, Australia.
#
# P - Motion device
# M - Motor name
# PORT - Asyn port of controller
# ADDR - Axis number 0-7
# PREC - Precision of analog records
# SCAN - Scan period for monitor records.  Use passive when only epics will change value (default)
#      - Periodic scan will slow controller update performance (poller)
# MTRTYPE - motor type =
#       	0 - Servo
#		1 - Reverse servo
#		2 - High active stepper
#		3 - Low active stepper
#		4 - Reverse high active stepper
#		5 - Reverse low active stepper
# MTRON - motor off 0, motor on 1

global{ENCAVNSAMP=\$(ENCAVNSAMP=10),ENCAVSCAN=\$(ENCAVSCAN=Passive)}

file "$(GALIL)/GalilSup/Db/galil_motor_extras.template"
{
pattern
{   PVPREFIX, P, ASG,      M,    PORT,    ADDR, PREC, SCAN,        MTRTYPE, MTRON, EGU, IOCNAME  }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG01=DEFAULT)", "MTR\$(CCP)01",  "\$(PORT=Galil)", 0,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG02=DEFAULT)", "MTR\$(CCP)02",  "\$(PORT=Galil)", 1,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG03=DEFAULT)", "MTR\$(CCP)03",  "\$(PORT=Galil)", 2,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG04=DEFAULT)", "MTR\$(CCP)04",  "\$(PORT=Galil)", 3,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG05=DEFAULT)", "MTR\$(CCP)05",  "\$(PORT=Galil)", 4,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG06=DEFAULT)", "MTR\$(CCP)06",  "\$(PORT=Galil)", 5,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG07=DEFAULT)", "MTR\$(CCP)07",  "\$(PORT=Galil)", 6,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
 {  "\$(PVPREFIX)", "\$(P)", "\$(ASG08=DEFAULT)", "MTR\$(CCP)08",  "\$(PORT=Galil)", 7,    3,    "Passive",  "3",     "0",   "mm", "\$(IOCNAME=UNKNOWN)" }
}

file "$(UTILITIES)/db/field_setter.template" {
    pattern
    {P, FROM, TO, FIELD}
    {"\$(P)", MTR\$(CCP)01, MTR\$(CCP)01_MTRENC_DRIFT, ADEL}
    {"\$(P)", MTR\$(CCP)02, MTR\$(CCP)02_MTRENC_DRIFT, ADEL}
    {"\$(P)", MTR\$(CCP)03, MTR\$(CCP)03_MTRENC_DRIFT, ADEL}
    {"\$(P)", MTR\$(CCP)04, MTR\$(CCP)04_MTRENC_DRIFT, ADEL}
    {"\$(P)", MTR\$(CCP)05, MTR\$(CCP)05_MTRENC_DRIFT, ADEL}
    {"\$(P)", MTR\$(CCP)06, MTR\$(CCP)06_MTRENC_DRIFT, ADEL}
    {"\$(P)", MTR\$(CCP)07, MTR\$(CCP)07_MTRENC_DRIFT, ADEL}
    {"\$(P)", MTR\$(CCP)08, MTR\$(CCP)08_MTRENC_DRIFT, ADEL}
}
# end
