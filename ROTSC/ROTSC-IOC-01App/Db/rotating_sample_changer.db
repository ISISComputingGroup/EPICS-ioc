record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
}

record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(stringin, "$(P)ID")
{
    field(SCAN, "1 second")
	field(PHAS, "0")
    field(DTYP, "stream")
    field(INP,  "@rotsc.proto getID() $(PORT)")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:ID")
    field(SDIS, "$(P)DISABLE")
}

record(stringin, "$(P)RAW_STATUS")
{
    field(SCAN, "1 second")
	field(PHAS, "1")
    field(DTYP, "stream")
    field(INP,  "@rotsc.proto getStat($(P),RAW_MTR_STAT,$(ERR)_NUMBER,POSN) $(PORT)")
	field(FLNK, "$(P)STAT_FAN")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RAW_STATUS")
    field(SDIS, "$(P)DISABLE")
}

record(fanout, "$(P)STAT_FAN")
{
	field(LNK1, "$(P)CALC_MTR_1_ENB")
    field(LNK2, "$(P)CALC_MTR_0_ENB")
    field(LNK3, "$(P)CALC_ACTUATOR_ARM_POSN")
	field(LNK4, "$(P)CALC_CAR_AT_IDX")
    field(LNK5, "$(P)CALC_CAR_AT_POS_1")	
	field(LNK6, "$(P)STAT_FAN_01")
}

record(fanout, "$(P)STAT_FAN_01")
{
	field(LNK1, "$(P)CALC_SAMPLE_ARM_UP")
	field(LNK2, "$(P)CALC_SAMPLE_ARM_DOWN")
	field(LNK3, "$(P)CALC_MTR_1_DIRECTION")
	field(LNK4, "$(P)CALC_MTR_1_STATUS")
	field(LNK5, "$(P)CALC_MTR_0_STATUS")
	field(LNK6, "$(P)STAT_FAN_02")
}

record(fanout, "$(P)STAT_FAN_02")
{
	field(LNK1, "$(P)CALC_MTR_0_DIRECTION")
	field(LNK2, "$(P)POSN")
	field(LNK3, "$(P)$(ERR)_NUMBER")
}

record(stringin, "$(P)RAW_MTR_STAT")
{
	field(FLNK, "$(P)MTR_STAT_FAN")
}

record(fanout, "$(P)MTR_STAT_FAN")
{
	field(LNK1, "$(P)CALC_MTR_0_ACTIVE")
	field(LNK2, "$(P)CALC_MTR_1_ACTIVE")
}

record(ai, "$(P)POSN")
{
	field(DESC, "The position of the rotation")	
	info(INTEREST, "HIGH")
	info(archive, "VAL")
	field(EGU, "") # Fixed positions of 1-20
	field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MOVE_TO_POSN")
	field(SDIS, "$(P)DISABLE")
}

record(scalcout, "$(P)CALC_MTR_1_ENB")
{
    field(CALC, "AA[0,0]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)MTR_1_ENABLED PP MS")
}

record(bo, "$(P)MTR_1_ENABLED")
{
	field(ONAM, "ENABLED")
	field(ZNAM, "DISABLED")
}

record(scalcout, "$(P)CALC_MTR_0_ENB")
{
    field(CALC, "AA[1,1]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)MTR_0_ENABLED PP MS")
}

record(bo, "$(P)MTR_0_ENABLED")
{
	field(ONAM, "ENABLED")
	field(ZNAM, "DISABLED")
}

record(scalcout, "$(P)CALC_ACTUATOR_ARM_POSN")
{
    field(CALC, "AA[5,5]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)ACTUATOR_ARM_POSITION PP MS")
}

record(bo, "$(P)ACTUATOR_ARM_POSITION")
{
	field(DESC, "The position of the arm")
	field(ONAM, "RAISED")
	field(ZNAM, "LOWERED")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
}

record(scalcout, "$(P)CALC_CAR_AT_IDX")
{
    field(CALC, "AA[7,7]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)CARROUSEL_AT_IDX PP MS")
}

record(bo, "$(P)CARROUSEL_AT_IDX")
{
	field(ONAM, "AT INDEX")
	field(ZNAM, "OFF INDEX")
}

record(scalcout, "$(P)CALC_CAR_AT_POS_1")
{
    field(CALC, "AA[8,8]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)CARROUSEL_AT_POS_1 PP MS")
}

record(bo, "$(P)CARROUSEL_AT_POS_1")
{
	field(ONAM, "AT POSITION 1")
	field(ZNAM, "OFF POSITION 1")
}

record(scalcout, "$(P)CALC_SAMPLE_ARM_UP")
{
    field(CALC, "AA[9,9]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)SAMPLE_ARM_UP PP MS")
}

record(bo, "$(P)SAMPLE_ARM_UP")
{
	field(ONAM, "UP")
	field(ZNAM, "NOT UP")
}

record(scalcout, "$(P)CALC_SAMPLE_ARM_DOWN")
{
    field(CALC, "AA[10,10]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)SAMPLE_ARM_DOWN PP MS")
}

record(bo, "$(P)SAMPLE_ARM_DOWN")
{
	field(ONAM, "DOWN")
	field(ZNAM, "NOT DOWN")
}

record(scalcout, "$(P)CALC_MTR_1_DIRECTION")
{
    field(CALC, "AA[12,12]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)MOTOR_1_DIRECTION PP MS")
}

record(bo, "$(P)MOTOR_1_DIRECTION")
{
	field(ONAM, "RAISE")
	field(ZNAM, "LOWER")
}

record(scalcout, "$(P)CALC_MTR_1_STATUS")
{
    field(CALC, "AA[13,13]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)MOTOR_1_STATUS PP MS")
}

record(bo, "$(P)MOTOR_1_STATUS")
{
	field(ONAM, "ERROR")
	field(ZNAM, "WORKING")
}

record(scalcout, "$(P)CALC_MTR_0_STATUS")
{
    field(CALC, "AA[6,6]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)MOTOR_0_STATUS PP MS")
}

record(bo, "$(P)MOTOR_0_STATUS")
{
	field(ONAM, "ERROR")
	field(ZNAM, "WORKING")
}

record(scalcout, "$(P)CALC_MTR_0_DIRECTION")
{
    field(CALC, "AA[15,15]")
    field(INAA, "$(P)RAW_STATUS PP MS")
    field(OUT, "$(P)MOTOR_0_DIRECTION PP MS")
}

record(bo, "$(P)MOTOR_0_DIRECTION")
{
	field(DESC, "The direction it is set to rotate")
	field(ONAM, "BACKWARD")
	field(ZNAM, "FORWARD")
}

record(scalcout, "$(P)CALC_MTR_1_ACTIVE")
{
    field(CALC, "AA[0,0]")
    field(INAA, "$(P)RAW_MTR_STAT PP MS")
    field(OUT, "$(P)MOTOR_1_ACTIVE PP MS")
}

record(bo, "$(P)MOTOR_1_ACTIVE")
{
	field(DESC, "The active/idle state of the arm motor")
	field(ONAM, "ACTIVE")
	field(ZNAM, "IDLE")
}

record(scalcout, "$(P)CALC_MTR_0_ACTIVE")
{
    field(CALC, "AA[2,2]")
    field(INAA, "$(P)RAW_MTR_STAT PP MS")
    field(OUT, "$(P)MOTOR_0_ACTIVE PP MS")
}

record(bo, "$(P)MOTOR_0_ACTIVE")
{
	field(DESC, "The active/idle state of rotating motor")
	field(ONAM, "ACTIVE")
	field(ZNAM, "IDLE")
}

record(bo, "$(P)GO_FORWARD")
{
	field(DTYP, "stream")
	field(DESC, "Move carousel one step forward")
	field(OUT, "@rotsc.proto sendCommand(fw,$(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
	info(INTEREST, "MEDIUM")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:GO_FORWARD")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)GO_BACKWARD")
{
	field(DTYP, "stream")
	field(DESC, "Move carousel one step backward")
	field(OUT, "@rotsc.proto sendCommand(bk,$(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
	info(INTEREST, "MEDIUM")	
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:GO_BACKWARD")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)HALT")
{
	field(DTYP, "stream")
	field(DESC, "Halt all motors")
	field(OUT, "@rotsc.proto sendCommand(ht,$(P)$(CMD_ERR)_NUMBER) $(PORT)")	
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HALT")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)RESET_0")
{
	field(DTYP, "stream")
	field(DESC, "Reset the rotating drive")
	field(OUT, "@rotsc.proto sendCommand(r0,$(P)$(CMD_ERR)_NUMBER) $(PORT)")	
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RESET_0")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)RESET_1")
{
	field(DTYP, "stream")
	field(DESC, "Reset the arm drive")
	field(OUT, "@rotsc.proto sendCommand(r1,$(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RESET_1")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)INIT")
{
	field(VAL, "0")
	field(DTYP, "stream")
	field(DESC, "Initialise the device")
	field(OUT, "@rotsc.proto sendCommand(in,$(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
	info(INTEREST, "MEDIUM")	
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:INIT")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)LOWER_ARM")
{
	field(DTYP, "stream")
	field(DESC, "Lower the sample arm")
	field(OUT, "@rotsc.proto sendCommand(lo,$(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
	info(INTEREST, "MEDIUM")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LOWER_ARM")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)RAISE_ARM")
{
	field(DTYP, "stream")
	field(DESC, "Raise the sample arm")
	field(OUT, "@rotsc.proto sendCommand(ra,$(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
	info(INTEREST, "MEDIUM")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RAISE_ARM")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)RETRIEVE_DROPPED")
{
	field(DTYP, "stream")
	field(DESC, "Retrieve a dropped sample")
	field(OUT, "@rotsc.proto sendCommand(rt,$(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RETRIEVE_DROPPED")
    field(SDIS, "$(P)DISABLE")
}

record(ao, "$(P)MOVE_TO_POSN")
{	
	field(SCAN, "Passive")
	field(DTYP, "stream")
	field(DESC, "Move to the position and lower the arm")
	field(OUT, "@rotsc.proto moveWithLower($(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
	info(INTEREST, "HIGH")
	field(EGU, "")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MOVE_TO_POSN")
    field(SDIS, "$(P)DISABLE")
}

record(ao, "$(P)MOVE_TO_POSN:NO_LOWER")
{
	field(DTYP, "stream")
	field(DESC, "Move to the given position")
	field(OUT, "@rotsc.proto moveNoLower($(P)$(CMD_ERR)_NUMBER) $(PORT)")
	field(FLNK, "$(P)$(CMD_ERR)_NUMBER")
	info(INTEREST, "MEDIUM")
	field(EGU, "")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MOVE_TO_POSN:NO_LOWER")
    field(SDIS, "$(P)DISABLE")
}

record(calc, "$(P)CALC_MOVE_FINISHED")
{
	field(SCAN, "Passive")
	field(INPA, "$(P)MOTOR_0_ACTIVE CP")
	field(INPB, "$(P)MOTOR_1_ACTIVE CP")
	field(CALC, "(!A)&&(!B)")
}

record(calc, "$(P)IS_INITIALISED")
{
	field(INPA, "$(P)POSN.VAL CP")
	field(CALC, "A#0")
}

record(calcout, "$(P)CALC_STATUS_STRING")
{
	field(INPA, "$(P)IS_INITIALISED CP")
	field(INPB, "$(P)CALC_MOVE_FINISHED CP")
	field(CALC, "(!A)?0:B?1:2")
	field(OUT, "$(P)STATUS_STRING PP")
}

record(mbbi, "$(P)STATUS_STRING")
{
	field(ZRVL, "0")
	field(ZRST, "Uninitialised")
	field(ONVL, "1")
	field(ONST, "Idle")
	field(TWVL, "2")
	field(TWST, "Moving")
}

### SIMULATION RECORDS ###

record(bo, "$(P)SIM:RESET_0")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:RESET_1")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:MOVE_TO_POSN")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:RETRIEVE_DROPPED")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:ID")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:GO_BACKWARD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:RAW_STATUS")
{
	field(DESC, "Series of status bits")
	field(VAL, "1110011111001100 000 01")
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:GO_FORWARD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:MOVE_TO_POSN:NO_LOWER")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:INIT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:RAISE_ARM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:HALT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:LOWER_ARM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

