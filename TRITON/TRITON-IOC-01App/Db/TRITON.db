record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
    field(PINI, "YES")
}

record(bo, "$(P)DISABLE")
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(stringin, "$(P)MC:UID")
{
    field(DESC, "Unique ID of mixing chamber")
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getMixChamberUid $(PORT)")
    
    field(PINI, "YES")
    field(SCAN, "1 second") 
	
	field(FLNK, "$(P)HEATER:TYPE")
}

record(ao, "$(P)P:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devtriton.proto setP($(P)) $(PORT)")
}

record(ai, "$(P)P")
{
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getP($(P)) $(PORT)")
    field(SCAN, "1 second") 
}

record(ao, "$(P)I:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devtriton.proto setI($(P)) $(PORT)")
}

record(ai, "$(P)I")
{
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getI($(P)) $(PORT)")
    field(SCAN, "1 second") 
}

record(ao, "$(P)D:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devtriton.proto setD($(P)) $(PORT)")
}

record(ai, "$(P)D")
{
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getD($(P)) $(PORT)")
    field(SCAN, "1 second") 
}

record(ao, "$(P)TEMP:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devtriton.proto setTSetpoint($(P)) $(PORT)")
}

record(ai, "$(P)TEMP:SP:RBV")
{
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getTSetpoint($(P)) $(PORT)")
    field(SCAN, "1 second") 
}

record(stringin, "$(P)HEATER:TYPE")
{
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getHtrType($(P)) $(PORT)")
}

record(ao, "$(P)HEATER:RANGE:SP")
{
    field(DTYP, "stream")
    field(OUT, "@devtriton.proto setHtrRange($(P)) $(PORT)")
}

record(ai, "$(P)HEATER:RANGE")
{
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getHtrRange($(P)) $(PORT)")
    field(SCAN, "1 second") 
}

record(ai, "$(P)HEATER:POWER")
{
    field(DTYP, "stream")
    field(INP, "@devtriton.proto getHtrPower($(P)) $(PORT)")
    field(SCAN, "1 second")
}

record(bi, "$(P)CLOSEDLOOP")
{
    field(DTYP, "stream")
	field(INP, "@devtriton.proto getClosedLoop($(P)) $(PORT)")
	field(SCAN, "1 second")
	
	field(ZNAM, "NO")
	field(ONAM, "YES")
}
