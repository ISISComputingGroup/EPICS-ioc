
record(stringin, "$(P)IDN")
{
    field(DESC, "SCPI identification string")
    field(DTYP, "stream")
    field(INP,  "@devKeithley_2700.proto getIDN $(PORT)")
    field(PINI, "YES")
}

record(bo, "$(P)BUFFER:CLEAR:SP")
{
	field(DESC, "Trigger a buffer clear")
	field(DTYP, "stream")
	field(ZNAM, "")
	field(ONAM, "")
	field(OUT, "@devKeithley_2700.proto clearBuffer $(PORT)")    
	info(ARCHIVE, "VAL")

}
alias("$(P)BUFFER:CLEAR:SP","$(P)BUFFER:CLEAR")

# source of the buffer feed: sense, calculate, or none
record(mbbi, "$(P)BUFFER:SOURCE") 
{
    field(DESC, "Get current buffer source")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@devKeithley_2700.proto getBufferFeedSource $(PORT)")
    field(ZRST, "SENS")
    field(ONST, "CALC")
    field(TWST, "NONE")
    info(INTEREST, "HIGH")
}

record(mbbo, "$(P)BUFFER:SOURCE:SP") 
{
    field(DESC, "Set buffer feed source")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(OUT,  "@devKeithley_2700.proto setBufferFeedSource $(PORT)")
    field(ZRST, "SENS")
    field(ONST, "CALC")
    field(TWST, "NONE")
    info(INTEREST, "HIGH")
}

record(bi, "$(P)BUFFER:CLEAR:AUTO") 
{
    field(DESC, "Return buffer clear mode status")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@devKeithley_2700.proto getBufferAutoClearStatus $(PORT)")
    field(ZNAM, "ON")
    field(ONAM, "OFF")
    info(INTEREST, "HIGH")
}

record(bo, "$(P)BUFFER:CLEAR:AUTO:SP") 
{
    field(DESC, "Set Buffer State")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devKeithley_2700.proto setBufferAutoClearStatus $(PORT)")
    field(ZNAM, "ON")
    field(ONAM, "OFF")
    info(INTEREST, "HIGH")
}

record(ai, "$(P)BUFFER:NEXT") 
{
    field(DESC, "Next Buffer reading location")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@devKeithley_2700.proto getNextBufferReadingLoc $(PORT)")
}

# Records also receives value for MEM:USED and sets its value 
record(ai, "$(P)BUFFER:MEM:AVAIL")
{
    field(DESC, "Available buffer bytes")
    field(DTYP, "stream")
	field (SCAN, "1 second")	
    field(INP,  "@devKeithley_2700.proto getBufferMemory($(P)BUFFER:MEM:USED) $(PORT)")
	field(EGU, "b")
}

record(ai, "$(P)BUFFER:MEM:USED")
{
    field(DESC, "Bytes used by buffer for stored readings")
    field(DTYP, "stream")
	field(EGU, "b")
}

## return string of readings from Start to +Count
record(stringin, "$(P)BUFFER:READINGS")
{
    field(DESC, "Buffer Readings")
    field(DTYP, "stream")
    field(INP,  "@devKeithley_2700.proto getBuffReadRange($(P)START,$(P)COUNT) $(PORT)")
    field(SCAN, "1 second")
}

record(ai, "$(P)START") 
{
    field(DESC, "Starting mem location of buffer readings")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    info(INTEREST, "LOW")
}
alias("$(P)START","$(P)START:SP")

record(ai, "$(P)COUNT") 
{
    field(DESC, "Buffer memory locations to read")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    info(INTEREST, "LOW")
}
alias("$(P)COUNT","$(P)COUNT:SP")







# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
