# TTi EX355P Power Supply
# I.Gillingham May 2013
# 
# Slightly modified by Matt Clarke (ISIS)
#
# Macros:
#   P   - The prefix name
#   PORT- The asyn port

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
    field(PINI, "YES")
}

record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "0")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

# The desired output voltage.
record(ao, "$(P)VOLTAGE:SP") 
{
    field(DESC, "Output voltage")
    field(EGU, "V")
    field(DRVH, "35.0")
    field(DRVL, "0.0")    
    field(PREC, "2")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@ttiEX355P.proto setVoltage $(PORT)")
    field(PINI, "YES")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE:SP")
    field(SDIS, "$(P)DISABLE")

$(IFAUTOSAVESETPOINTS=#) info(autosaveFields, "VAL")
}

# The desired output current.
record(ao, "$(P)CURRENT:SP") 
{
    field(DESC, "Output current")
    field(EGU, "A")
    field(DRVH, "5.0")
    field(DRVL, "0.01")    
    field(PREC, "2")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@ttiEX355P.proto setCurrent $(PORT)")
    field(PINI, "YES")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT:SP")
    field(SDIS, "$(P)DISABLE")
$(IFAUTOSAVESETPOINTS=#) info(autosaveFields, "VAL")
}

# The read back setpoint voltage
record(ai, "$(P)VOLTAGE:SP:RBV") 
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(HOPR, "35.0")
    field(LOPR, "0.0")    
    field(PREC, "2")
    field(EGU,  "V")
    field(INP,  "@ttiEX355P.proto getSetpointVoltage $(PORT)")
    field(PINI, "YES")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# The read back output voltage
record(ai, "$(P)VOLTAGE") 
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(HOPR, "35.0")
    field(LOPR, "0.0")    
    field(PREC, "2")
    field(EGU,  "V")
    field(INP,  "@ttiEX355P.proto getActualVoltage $(PORT)")
    field(PINI, "YES")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE")
    field(SDIS, "$(P)DISABLE")
}

# The read back setpoint current
record(ai, "$(P)CURRENT:SP:RBV") 
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(EGU, "A")
    field(HOPR, "5.0")
    field(LOPR, "0.01")    
    field(PREC, "2")
    field(INP,  "@ttiEX355P.proto getSetpointCurrent $(PORT)")
    field(PINI, "YES")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# The read back output current
record(ai, "$(P)CURRENT") 
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(EGU, "A")
    field(HOPR, "5.0")
    field(LOPR, "0.01")    
    field(PREC, "2")
    field(INP,  "@ttiEX355P.proto getActualCurrent $(PORT)")
    field(PINI, "YES")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT")
    field(SDIS, "$(P)DISABLE")
    field(FLNK, "$(P)STAB:SCANNOW")
}

# Output control
record(bo, "$(P)OUTPUTSTATUS:SP") 
{
    field(DESC, "Output control")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@ttiEX355P.proto setOutput $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUTSTATUS:SP")
    field(SDIS, "$(P)DISABLE")
}

# Output state
record(bi, "$(P)OUTPUTSTATUS") 
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@ttiEX355P.proto getOutput $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUTSTATUS")
    field(SDIS, "$(P)DISABLE")
}

alias("$(P)OUTPUTSTATUS", "$(P)OUTPUTSTATUS:SP:RBV")


# Output mode status
record(bi, "$(P)OUTPUTMODE") 
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@ttiEX355P.proto getMode $(PORT)")
    field(ZNAM, "Constant Voltage")
    field(ONAM, "Constant Current")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUTMODE")
    field(SDIS, "$(P)DISABLE")
}

# The error register
record(mbbi, "$(P)ERROR")
{
    field(DESC, "Error status")
    field(DTYP, "stream")
    field(INP,  "@ttiEX355P.proto getError $(PORT)")
    field(SCAN, "1 second")
    field(ZRST, "No error")
    field(ONST, "Cmd not recognised")
    field(TWST, "Cmd outside limits")
    field(UNSV, "MAJOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MINOR")
    field(TWSV, "MAJOR")
    field(PINI, "YES")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:ERROR")
    field(SDIS, "$(P)DISABLE")
}

record(stringin, "$(P)IDENT")
{
    field(DESC, "Identity")
    field(DTYP, "stream")
    field(INP,  "@ttiEX355P.proto getIDN $(PORT)")
    field(SCAN, "10 second")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:IDENT")
    field(SDIS, "$(P)DISABLE")
}

# Reset the instrument
# Just write to .PROC to invoke
# ZNAM, ONAM have no effect.
record(bo, "$(P)RESET:SP") 
{
    field(DESC, "Reset supply")
    field(DTYP, "stream")
    field(OUT,  "@ttiEX355P.proto reset $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RESET:SP")
    field(SDIS, "$(P)DISABLE")
}

alias("$(P)RESET:SP", "$(P)RESET")


# Current <-> Field conversion

record(bo, "$(P)FIELD_CONV_DEFINED") {
    field(DESC, "Whether field conversion is defined")
    field(VAL, "$(FIELD_CONV_DEFINED)")
    field(PINI, "YES")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(ao, "$(P)AMPSTOGAUSS"){
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL, "$(AMPSTOGAUSS)")
    field(PINI, "YES")
    field(EGU, "G/A")
    field(PREC, "3")
}

record(calcout, "$(P)FIELD:SP:_CALC") {
    field(INPA, "$(P)FIELD:SP")
    field(INPB, "$(P)AMPSTOGAUSS")
    field(CALC, "A/B")
    field(OUT, "$(P)CURRENT:SP PP")
}

record(ao, "$(P)FIELD:SP") {
    field(FLNK, "$(P)FIELD:SP:_CALC")
    field(EGU, "G")
    field(PREC, "3")
    field(DESC, "field setpoint")
    
    field(HIHI, "$(MAX_FIELD)")
    field(HHSV, "MAJOR")
    field(DRVH, "$(MAX_FIELD)")

}

record(calc, "$(P)FIELD:_CALC") {
    field(INPA, "$(P)CURRENT CP MS")
    field(INPB, "$(P)AMPSTOGAUSS CP MS")
    field(CALC, "A*B")
}

record(ai, "$(P)FIELD") {
    field(INP, "$(P)FIELD:_CALC CP MS")
    field(EGU, "G")
    field(PREC, "3")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
    field(DESC, "field")
    
    field(HIHI, "$(MAX_FIELD)")
    field(HHSV, "MAJOR")
}

record(calc, "$(P)FIELD:SP:RBV:_CALC") {
    field(INPA, "$(P)CURRENT:SP:RBV CP MS")
    field(INPB, "$(P)AMPSTOGAUSS CP MS")
    field(CALC, "A*B")
}

record(ai, "$(P)FIELD:SP:RBV") {    
    field(INP, "$(P)FIELD:SP:RBV:_CALC CP MS")
    field(EGU, "G")
    field(PREC, "3")
    info(archive, "VAL")
    field(DESC, "field setpoint readback")
    
    field(HIHI, "$(MAX_FIELD)")
    field(HHSV, "MAJOR")
}

record(bi, "$(P)FIELD_READY") {
    field(DESC, "Whether the field is currently stable")
    field(INP, "$(P)STAB:IS_STABLE CP")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    info(archive, "VAL")
    info(interest, "HIGH")
    
} 

record(ao, "$(P)FIELD:MAX") {
    field(VAL, "$(MAX_FIELD)")
    field(PINI, "YES")
}

record(calc, "$(P)FIELD:PERCENT") {
    field(INPA, "$(P)FIELD CP MS")
    field(INPB, "$(P)FIELD:MAX CP MS")
    field(CALC, "A/B*100")
}

# Auto on/off

record(bo, "$(P)AUTOONOFF")
{
    field(DESC, "Toggle auto on/off")
    field(DTYP, "Soft Channel")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(VAL, "0")
    field(PINI, "YES")
    field(DISP, "$(DISABLE_AUTOONOFF)")
    info(autosaveFields, "VAL")
    info(archive, "VAL")
}

record(calcout, "$(P)CALCONOFF")
{
    field(DESC, "Automatically toggles power status")
    field(CALC, "(A) && ((B > $(OFF_TOLERANCE)) || C)")
    field(OCAL, "B > $(OFF_TOLERANCE)")
    field(INPA, "$(P)AUTOONOFF CP")
    field(INPB, "$(P)CURRENT:SP:RBV CP")
    field(INPC, "$(P)FIELD_READY CP")
    field(OUT, "$(P)OUTPUTSTATUS:SP PP")
    field(OOPT, "When Non-zero")
    field(DOPT, "Use OCAL")
    info(archive, "A B C D VAL")
}

record(seq, "$(P)SWEEP_OFF")
{
    field(DESC, "Trigger sweep to 0 and turn off")
    field(SELM, "All")
    
    field(LNK1, "$(P)AUTOONOFF PP")
    field(DO1, "1")
    
    field(LNK2, "$(P)CURRENT:SP PP")
    field(DO2, "0")
    field(DLY2, "0.5")
    
    field(LNK3, "$(P)FIELD:SP PP")
    field(DO3, "0")
    field(DLY3, "0.5")
}

### SIMULATION RECORDS ###

record(ao, "$(P)SIM:VOLTAGE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:VOLTAGE","$(P)SIM:VOLTAGE:SP")

alias("$(P)SIM:VOLTAGE","$(P)SIM:VOLTAGE:SP:RBV")

record(bo, "$(P)SIM:OUTPUTMODE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(mbbo, "$(P)SIM:ERROR")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:RESET")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:CURRENT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:CURRENT","$(P)SIM:CURRENT:SP")

alias("$(P)SIM:CURRENT","$(P)SIM:CURRENT:SP:RBV")

record(bo, "$(P)SIM:OUTPUTSTATUS")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:OUTPUTSTATUS","$(P)SIM:OUTPUTSTATUS:SP")

alias("$(P)SIM:OUTPUTSTATUS","$(P)SIM:OUTPUTSTATUS:SP:RBV")

record(stringout, "$(P)SIM:IDENT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

